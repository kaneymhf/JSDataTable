{"version":3,"file":"jsdatatables.js","sources":["../../../src/js/lang.js","../../../src/js/helpers.js","../../../src/js/rows.js","../../../src/js/columns.js","../../../src/js/table.js","../../../src/js/config.js","../../../src/js/datatable.js"],"sourcesContent":["export const strings = {\n  en: {\n    placeholder: \"Search...\",\n    perPage: \"{select} entries per page\",\n    noRows: \"No entries found\",\n    noResults: \"No results match your search query\",\n    info: \"Showing {start} to {end} of {rows} entries\",\n  },\n  pt: {\n    placeholder: \"Buscar...\",\n    perPage: \"{select} registros por página\",\n    noRows: \"Nenhum registro encontrado\",\n    noResults: \"Nenhum resultado foi encontrado para a busca\",\n    info: \"Exibindo {start} até {end} de {rows} registros\",\n  },\n  es: {\n    placeholder: \"Búsqueda...\",\n    perPage: \"{select} entradas por página\",\n    noRows: \"Entradas no encontradas\",\n    noResults: \"Ningún resultado coincide con su consulta de búsqueda\",\n    info: \"Mostrando {start} a {end} de {rows} entradas\",\n  },\n  de: {\n    placeholder: \"Suchen...\",\n    perPage: \"{select} Einträge pro seite\",\n    noRows: \"Keine Einträge gefunden\",\n    noResults: \"Keine Ergebnisse stimmen mit Ihrer Suchanfrage überein\",\n    info: \"Es werden {start} bis {end} von {rows} Einträgen angezeigt\",\n  },\n  it: {\n    placeholder: \"Ricerca...\",\n    perPage: \"{select} voci per pagina\",\n    noRows: \"Nessuna voce trovata\",\n    noResults: \"Nessun risultato corrisponde alla tua query di ricerca\",\n    info: \"Visualizzazione da {start} a {end} di {rows} voci\", \n  },\n  ru: {\n    placeholder: \"Поиск...\",\n    perPage: \"{select} записей на страницу\",\n    noRows: \"Записей не найдено\",\n    noResults: \"По вашему запросу ничего не найдено\",\n    info: \"Показаны записи с {start} по {end} из {rows} \", \n  }\n};\n","import { strings } from \"./lang\"\n\n/**\n * Check is item is object\n * @return {Boolean}\n */\nexport const isObject = val => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check for valid JSON string\n * @param  {String}   str\n * @return {Boolean|Array|Object}\n */\nexport const isJson = str => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch (e) {\n        return !1\n    }\n    return !(null === t || (!Array.isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Create DOM element node\n * @param  {String}   nodeName nodeName\n * @param  {Object}   attrs properties and attributes\n * @return {Object}\n */\nexport const createElement = (nodeName, attrs) => {\n    const dom = document.createElement(nodeName)\n    if (attrs && \"object\" == typeof attrs) {\n        for (const attr in attrs) {\n            if (\"html\" === attr) {\n                dom.innerHTML = attrs[attr]\n            } else {\n                dom.setAttribute(attr, attrs[attr])\n            }\n        }\n    }\n    return dom\n}\n\nexport const flush = el => {\n    if (el instanceof NodeList) {\n        el.forEach(e => flush(e))\n    } else {\n        el.innerHTML = \"\"\n    }\n}\n\n/**\n * Create button helper\n * @param  {String}   class\n * @param  {Number}   page\n * @param  {String}   text\n * @return {Object}\n */\nexport const button = (className, page, text) => createElement(\n    \"li\", {\n        class: className,\n        html: `<a href=\"#\" data-page=\"${page}\">${text}</a>`\n    }\n)\n\nconst bubbleSort = inputArr => {\n  const lang = document.documentElement.lang || \"en\";\n  const len = inputArr.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len; j++) {\n      if (j + 1 < len) {\n        if (\n          inputArr[j].value\n            .toString()\n            .localeCompare(inputArr[j + 1].value.toString(), lang, {\n              numeric: true\n            }) > 0\n        ) {\n          const tmp = inputArr[j];\n          inputArr[j] = inputArr[j + 1];\n          inputArr[j + 1] = tmp;\n        }\n      }\n    }\n  }\n  return inputArr;\n};\n\nexport const sortItems = (a, b) => {\n    a = bubbleSort(a);\n    if (b == -1) {\n        a = a.reverse();\n    }\n  return a;\n}\n\n/**\n * Pager truncation algorithm\n */\nexport const truncate = (a, b, c, d, ellipsis) => {\n    d = d || 2\n    let j\n    const e = 2 * d\n    let f = b - d\n    let g = b + d\n    const h = []\n    const i = []\n    if (b < 4 - d + e) {\n        g = 3 + e\n    } else if (b > c - (3 - d + e)) {\n        f = c - (2 + e)\n    }\n    for (let k = 1; k <= c; k++) {\n        if (1 == k || k == c || (k >= f && k <= g)) {\n            const l = a[k - 1]\n            l.classList.remove(\"active\")\n            h.push(l)\n        }\n    }\n    h.forEach(c => {\n        const d = c.children[0].getAttribute(\"data-page\")\n        if (j) {\n            const e = j.children[0].getAttribute(\"data-page\")\n            if (d - e == 2) i.push(a[e])\n            else if (d - e != 1) {\n                const f = createElement(\"li\", {\n                    class: \"ellipsis\",\n                    html: `<a href=\"#\">${ellipsis}</a>`\n                })\n                i.push(f)\n            }\n        }\n        i.push(c)\n        j = c\n    })\n\n    return i\n}\n\nexport const getStrings = (lang = false) => {\n  if (!lang) {\n    lang = document.documentElement.lang || \"en\";\n  }\n    \n  lang = lang.substring(0, 2).toLowerCase();\n\n  if (!(lang in strings)) {\n    lang = \"en\";\n  }\n\n  return strings[lang];\n}","import { createElement } from \"./helpers\"\n/**\n * Rows API\n * @param {Object} instance DataTable instance\n * @param {Array} rows\n */\nexport class Rows {\n  constructor(dt, rows) {\n    this.dt = dt;\n    this.rows = rows;\n\n    return this;\n  }\n\n  /**\n   * Build a new row\n   * @param  {Array} row\n   * @return {HTMLElement}\n   */\n  build(row) {\n    const tr = createElement(\"tr\");\n\n    let headings = this.dt.headings;\n\n    if (!headings.length) {\n      headings = row.map(() => \"\");\n    }\n\n    headings.forEach((h, i) => {\n      const td = createElement(\"td\");\n\n      // Fixes #29\n      if (!row[i] || !row[i].length) {\n        row[i] = \"\";\n      }\n\n      td.innerHTML = row[i];\n\n      td.data = row[i];\n\n      tr.appendChild(td);\n    });\n\n    return tr;\n  }\n\n  render(row) {\n    return row;\n  }\n\n  /**\n   * Add new row\n   * @param {Array} select\n   */\n  add(data) {\n    if (Array.isArray(data)) {\n      const dt = this.dt;\n      // Check for multiple rows\n      if (Array.isArray(data[0])) {\n        data.forEach(row => {\n          dt.data.push(this.build(row));\n        });\n      } else {\n        dt.data.push(this.build(data));\n      }\n\n      // We may have added data to an empty table\n      if (dt.data.length) {\n        dt.hasRows = true;\n      }\n\n      this.update();\n\n      dt.columns().rebuild();\n    }\n  }\n\n  /**\n   * Remove row(s)\n   * @param  {Array|Number} select\n   * @return {Void}\n   */\n  remove(select) {\n    const dt = this.dt;\n\n    if (Array.isArray(select)) {\n      // Remove in reverse otherwise the indexes will be incorrect\n      select.sort((a, b) => b - a);\n\n      select.forEach(row => {\n        dt.data.splice(row, 1);\n      });\n    } else if (select == \"all\") {\n      dt.data = [];\n    } else {\n      dt.data.splice(select, 1);\n    }\n\n    // We may have emptied the table\n    if (!dt.data.length) {\n      dt.hasRows = false;\n    }\n\n    this.update();\n    dt.columns().rebuild();\n  }\n\n  /**\n   * Update row indexes\n   * @return {Void}\n   */\n  update() {\n    this.dt.data.forEach((row, i) => {\n      row.dataIndex = i;\n    });\n  }\n\n  /**\n   * Find index of row by searching for a value in a column\n   * @param  {Number} columnIndex\n   * @param  {String} value\n   * @return {Number}\n   */\n  findRowIndex(columnIndex, value) {\n    // returns row index of first case-insensitive string match\n    // inside the td innerText at specific column index\n    return this.dt.data.findIndex(tr => tr.children[columnIndex].innerText\n        .toLowerCase()\n        .includes(String(value).toLowerCase())\n    );\n  }\n\n  /**\n   * Find index, row, and column data by searching for a value in a column\n   * @param  {Number} columnIndex\n   * @param  {String} value\n   * @return {Object}\n   */\n  findRow(columnIndex, value) {\n    // get the row index\n    const index = this.findRowIndex(columnIndex, value);\n    // exit if not found\n    if (index < 0) {\n      return {\n        index: -1,\n        row: null,\n        cols: []\n      };\n    }\n    // get the row from data\n    const row = this.dt.data[index];\n    // return innerHTML of each td\n    const cols = [...row.cells].map(r => r.innerHTML);\n    // return everything\n    return {\n      index,\n      row,\n      cols\n    };\n  }\n\n  /**\n   * Update a row with new data\n   * @param  {Number} select\n   * @param  {Array} data\n   * @return {Void}\n   */\n  updateRow(select, data) {\n    const row = this.build(data);\n    this.dt.data.splice(select, 1, row);\n    this.update();\n    this.dt.columns().rebuild();\n  }\n}\n","import { sortItems } from \"./helpers\";\n\n/**\n * Columns API\n * @param {Object} instance DataTable instance\n * @param {Mixed} columns  Column index or array of column indexes\n */\nexport class Columns {\n  constructor(dt) {\n    this.dt = dt;\n    return this;\n  }\n\n  /**\n   * Swap two columns\n   * @return {Void}\n   */\n  swap(columns) {\n    if (columns.length && columns.length === 2) {\n      const cols = [];\n\n      // Get the current column indexes\n      this.dt.headings.forEach((h, i) => {\n        cols.push(i);\n      });\n\n      const x = columns[0];\n      const y = columns[1];\n      const b = cols[y];\n      cols[y] = cols[x];\n      cols[x] = b;\n\n      this.order(cols);\n    }\n  }\n\n  /**\n   * Reorder the columns\n   * @return {Array} columns  Array of ordered column indexes\n   */\n  order(columns) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let h;\n    let s;\n    let cell;\n\n    const temp = [[], [], [], []];\n\n    const dt = this.dt;\n\n    // Order the headings\n    columns.forEach((column, x) => {\n      h = dt.headings[column];\n      s = h.getAttribute(\"data-sortable\") !== \"false\";\n      a = h.cloneNode(true);\n      a.originalCellIndex = x;\n      a.sortable = s;\n\n      temp[0].push(a);\n\n      if (!dt.hiddenColumns.includes(column)) {\n        b = h.cloneNode(true);\n        b.originalCellIndex = x;\n        b.sortable = s;\n\n        temp[1].push(b);\n      }\n    });\n\n    // Order the row cells\n    dt.data.forEach((row, i) => {\n      c = row.cloneNode(false);\n      d = row.cloneNode(false);\n\n      c.dataIndex = d.dataIndex = i;\n\n      if (row.searchIndex !== null && row.searchIndex !== undefined) {\n        c.searchIndex = d.searchIndex = row.searchIndex;\n      }\n\n      // Append the cell to the fragment in the correct order\n      columns.forEach( column => {\n        cell = row.cells[column].cloneNode(true);\n        cell.data = row.cells[column].data;\n        c.appendChild(cell);\n\n        if (!dt.hiddenColumns.includes(column)) {\n          cell = row.cells[column].cloneNode(true);\n          cell.data = row.cells[column].data;\n          d.appendChild(cell);\n        }\n      });\n\n      temp[2].push(c);\n      temp[3].push(d);\n    });\n\n    dt.headings = temp[0];\n    dt.activeHeadings = temp[1];\n\n    dt.data = temp[2];\n    dt.activeRows = temp[3];\n\n    // Update\n    dt.update();\n  }\n\n  /**\n   * Hide columns\n   * @return {Void}\n   */\n  hide(columns) {\n    if (columns.length) {\n      const dt = this.dt;\n\n      columns.forEach( column => {\n        if (!dt.hiddenColumns.includes(column)) {\n          dt.hiddenColumns.push(column);\n        }\n      });\n\n      this.rebuild();\n    }\n  }\n\n  /**\n   * Show columns\n   * @return {Void}\n   */\n  show(columns) {\n    if (columns.length) {\n      let index;\n      const dt = this.dt;\n\n      columns.forEach(column => {\n        index = dt.hiddenColumns.indexOf(column);\n        if (index > -1) {\n          dt.hiddenColumns.splice(index, 1);\n        }\n      });\n\n      this.rebuild();\n    }\n  }\n\n  /**\n   * Check column(s) visibility\n   * @return {Boolean}\n   */\n  visible(columns) {\n    let cols;\n    const dt = this.dt;\n\n    columns = columns || dt.headings.map( th => th.originalCellIndex);\n\n    if (!isNaN(columns)) {\n      cols = !dt.hiddenColumns.includes(columns);\n    } else if (Array.isArray(columns)) {\n      cols = [];\n      columns.forEach(column => {\n        cols.push(!dt.hiddenColumns.includes(column));\n      });\n    }\n\n    return cols;\n  }\n\n  /**\n   * Add a new column\n   * @param {Object} data\n   */\n  add(data) {\n    let td;\n    const th = document.createElement(\"th\");\n\n    if (!this.dt.headings.length) {\n      this.dt.insert({\n        headings: [data.heading],\n        data: data.data.map( i => [i])\n      });\n      this.rebuild();\n      return;\n    }\n\n    if (!this.dt.hiddenHeader) {\n      if (data.heading.nodeName) {\n        th.appendChild(data.heading);\n      } else {\n        th.innerHTML = data.heading;\n      }\n    } else {\n      th.innerHTML = \"\";\n    }\n\n    this.dt.headings.push(th);\n\n    this.dt.data.forEach((row, i) => {\n      if (data.data[i]) {\n        td = document.createElement(\"td\");\n\n        if (data.data[i].nodeName) {\n          td.appendChild(data.data[i]);\n        } else {\n          td.innerHTML = data.data[i];\n        }\n\n        td.data = td.innerHTML;\n\n        if (data.render) {\n          td.innerHTML = data.render.call(this, td.data, td, row);\n        }\n\n        row.appendChild(td);\n      }\n    });\n\n    if (data.type) {\n      th.setAttribute(\"data-type\", data.type);\n    }\n    if (data.format) {\n      th.setAttribute(\"data-format\", data.format);\n    }\n\n    if (data.hasOwnProperty(\"sortable\")) {\n      th.sortable = data.sortable;\n      th.setAttribute(\n        \"data-sortable\",\n        data.sortable === true ? \"true\" : \"false\"\n      );\n    }\n\n    this.rebuild();\n\n    this.dt.renderHeader();\n  }\n\n  /**\n   * Remove column(s)\n   * @param  {Array|Number} select\n   * @return {Void}\n   */\n  remove(select) {\n    if (Array.isArray(select)) {\n      // Remove in reverse otherwise the indexes will be incorrect\n      select.sort((a, b) => b - a);\n      select.forEach(column => this.remove(column));\n    } else {\n      this.dt.headings.splice(select, 1);\n\n      this.dt.data.forEach( row => {\n        row.removeChild(row.cells[select]);\n      });\n    }\n\n    this.rebuild();\n  }\n\n  /**\n   * Filter by column\n   * @param  {int} column - The column no.\n   * @param  {string} dir - asc or desc\n   * @filter {array} filter - optional parameter with a list of strings\n   * @return {void}\n   */\n  filter(column, dir, init, terms) {\n    const dt = this.dt;\n\n    // Creates a internal state that manages filters if there are none\n    if (!dt.filterState) {\n      dt.filterState = {\n        originalData: dt.data\n      };\n    }\n\n    // If that column is was not filtered yet, we need to create its state\n    if (!dt.filterState[column]) {\n      // append a filter that selects all rows, 'resetting' the filter\n      const filters = [...terms, () => true];\n\n      dt.filterState[column] = (function () {\n        let i = 0;\n        return () => filters[i++ % filters.length];\n      }());\n    }\n\n    // Apply the filter and rebuild table\n    const rowFilter = dt.filterState[column](); // fetches next filter\n    const filteredRows = Array.from(dt.filterState.originalData).filter(\n      tr => {\n        const cell = tr.cells[column];\n        const content = cell.hasAttribute(\"data-content\") ?\n          cell.getAttribute(\"data-content\") :\n          cell.innerText;\n\n        // If the filter is a function, call it, if it is a string, compare it\n        return typeof rowFilter === \"function\" ?\n          rowFilter(content) :\n          content === rowFilter;\n      }\n    );\n\n    dt.data = filteredRows;\n\n    if (!dt.data.length) {\n      dt.clear();\n      dt.hasRows = false;\n      dt.setMessage(dt.options.labels.noRows);\n    } else {\n      this.rebuild();\n      dt.update();\n    }\n\n    if (!init) {\n      dt.emit(\"datatable.sort\", column, dir);\n    }\n  }\n\n  /**\n   * Sort by column\n   * @param  {int} column - The column no.\n   * @param  {string} dir - asc or desc\n   * @return {void}\n   */\n  sort(column, dir, init) {\n    const dt = this.dt;\n\n    // Check column is present\n    if (dt.hasHeadings && (column < 0 || column > dt.headings.length)) {\n      return false;\n    }\n\n    //If there is a filter for this column, apply it instead of sorting\n    const filterTerms =\n      dt.options.filters && dt.options.filters[dt.headings[column].textContent];\n    if (filterTerms && filterTerms.length !== 0) {\n      this.filter(column, dir, init, filterTerms);\n      return;\n    }\n\n    dt.sorting = true;\n\n    if (!init) {\n      dt.emit(\"datatable.sorting\", column, dir);\n    }\n\n    let rows = dt.data;\n    const alpha = [];\n    const numeric = [];\n    let a = 0;\n    let n = 0;\n    const th = dt.headings[column];\n\n    const waitFor = [];\n\n    // Check for date format\n    if (th.getAttribute(\"data-type\") === \"date\") {\n      let format = false;\n      const formatted = th.hasAttribute(\"data-format\");\n\n      if (formatted) {\n        format = th.getAttribute(\"data-format\");\n      }\n      waitFor.push(\n        import(\"./date\").then(\n          ({ parseDate }) => date => parseDate(date, format)\n        )\n      );\n    }\n\n    Promise.all(waitFor).then(importedFunctions => {\n      const parseFunction = importedFunctions[0]; // only defined if date\n      Array.from(rows).forEach(tr => {\n        const cell = tr.cells[column];\n        const content = cell.hasAttribute(\"data-content\") ?\n          cell.getAttribute(\"data-content\") :\n          cell.innerText;\n        let num;\n        if (parseFunction) {\n          num = parseFunction(content);\n        } else if (typeof content === \"string\") {\n          num = content.replace(/(\\$|,|\\s|%)/g, \"\");\n        } else {\n          num = content;\n        }\n\n        if (parseFloat(num) == num) {\n          numeric[n++] = {\n            value: Number(num),\n            row: tr\n          };\n        } else {\n          alpha[a++] = {\n            value:\n              typeof content === \"string\" ? content.toLowerCase() : content,\n            row: tr\n          };\n        }\n      });\n\n      /* Sort according to direction (ascending or descending) */\n      if (!dir) {\n        if (th.classList.contains(\"asc\")) {\n          dir = \"desc\";\n        } else {\n          dir = \"asc\";\n        }\n      }\n      let top;\n      let btm;\n      if (dir == \"desc\") {\n        top = sortItems(alpha, -1);\n        btm = sortItems(numeric, -1);\n        th.classList.remove(\"asc\");\n        th.classList.add(\"desc\");\n      } else {\n        top = sortItems(numeric, 1);\n        btm = sortItems(alpha, 1);\n        th.classList.remove(\"desc\");\n        th.classList.add(\"asc\");\n      }\n\n      /* Clear asc/desc class names from the last sorted column's th if it isn't the same as the one that was just clicked */\n      if (dt.lastTh && th != dt.lastTh) {\n        dt.lastTh.classList.remove(\"desc\");\n        dt.lastTh.classList.remove(\"asc\");\n      }\n\n      dt.lastTh = th;\n\n      /* Reorder the table */\n      rows = top.concat(btm);\n\n      dt.data = [];\n      const indexes = [];\n\n      rows.forEach((v, i) => {\n        dt.data.push(v.row);\n\n        if (v.row.searchIndex !== null && v.row.searchIndex !== undefined) {\n          indexes.push(i);\n        }\n      });\n\n      dt.searchData = indexes;\n\n      this.rebuild();\n\n      dt.update();\n\n      if (!init) {\n        dt.emit(\"datatable.sort\", column, dir);\n      }\n    });\n  }\n\n  /**\n   * Rebuild the columns\n   * @return {Void}\n   */\n  rebuild() {\n    let a;\n    let b;\n    let c;\n    let d;\n    const dt = this.dt;\n    const temp = [];\n\n    dt.activeRows = [];\n    dt.activeHeadings = [];\n\n    dt.headings.forEach((th, i) => {\n      th.originalCellIndex = i;\n      th.sortable = th.getAttribute(\"data-sortable\") !== \"false\";\n      if (!dt.hiddenColumns.includes(i)) {\n        dt.activeHeadings.push(th);\n      }\n    });\n\n    // Loop over the rows and reorder the cells\n    dt.data.forEach((row, i) => {\n      a = row.cloneNode(false);\n      b = row.cloneNode(false);\n\n      a.dataIndex = b.dataIndex = i;\n\n      if (row.searchIndex !== null && row.searchIndex !== undefined) {\n        a.searchIndex = b.searchIndex = row.searchIndex;\n      }\n\n      // Append the cell to the fragment in the correct order\n      Array.from(row.cells).forEach(cell => {\n        c = cell.cloneNode(true);\n        c.data = cell.data;\n        a.appendChild(c);\n\n        if (!dt.hiddenColumns.includes(c.cellIndex)) {\n          d = c.cloneNode(true);\n          d.data = c.data;\n          b.appendChild(d);\n        }\n      });\n\n      // Append the fragment with the ordered cells\n      temp.push(a);\n      dt.activeRows.push(b);\n    });\n\n    dt.data = temp;\n\n    dt.update();\n  }\n}\n","import { createElement } from \"./helpers\"\n\n/**\n * Parse data to HTML table\n */\nexport const dataToTable = function (data) {\n    let thead = false\n    let tbody = false\n\n    data = data || this.options.data\n\n    this.dom.classList.add(...this.options.classes.table);\n\n    if (data.headings) {\n      thead = createElement(\"thead\");\n      const tr = createElement(\"tr\");\n      data.headings.forEach((col, idx) => {\n        const td = createElement(\"th\", {\n          html: col,\n        });\n        if (this.options.selectable && idx == 0) {\n          td.classList.add(\"jsDataTable-select-cell\");\n        }\n        tr.appendChild(td);\n      });\n\n      thead.appendChild(tr);\n    }\n\n    if (data.data && data.data.length) {\n      tbody = createElement(\"tbody\");\n      data.data.forEach((rows) => {\n        if (data.headings) {\n          if (data.headings.length !== rows.length) {\n            throw new Error(\n              \"The number of rows do not match the number of headings\"\n            );\n          }\n        }\n        const tr = createElement(\"tr\");\n        rows.forEach((value) => {\n          const td = createElement(\"td\", {\n            html: value,\n          });\n          tr.appendChild(td);\n        });\n        tbody.appendChild(tr);\n      });\n    }\n\n    if (thead) {\n        if (this.dom.tHead !== null) {\n            this.dom.removeChild(this.dom.tHead)\n        }\n        this.dom.appendChild(thead)\n    }\n\n    if (tbody) {\n        if (this.dom.tBodies.length) {\n            this.dom.removeChild(this.dom.tBodies[0])\n        }\n        this.dom.appendChild(tbody)\n    }\n}\n","/**\n * Default configuration\n * @typ {Object}\n */\n\nimport { getStrings } from \"./helpers\";\n\nconst labels = getStrings();\n\nexport const defaultConfig = {\n  sortable: true,\n  searchable: true,\n\n  // Pagination\n  paging: true,\n  perPage: 10,\n  perPageSelect: [5, 10, 15, 20, 25],\n  nextPrev: true,\n  firstLast: false,\n  prevText: \"&lsaquo;\",\n  nextText: \"&rsaquo;\",\n  firstText: \"&laquo;\",\n  lastText: \"&raquo;\",\n  ellipsisText: \"&hellip;\",\n  ascText: \"▴\",\n  descText: \"▾\",\n  truncatePager: true,\n  pagerDelta: 2,\n\n  scrollY: \"\",\n\n  fixedColumns: true,\n  fixedHeight: false,\n\n  header: true,\n  hiddenHeader: false,\n  footer: false,\n\n  lang: false,\n\n  // Customise the layout\n  layout: {\n    top: \"{select}{search}\",\n    bottom: \"{info}{pager}\",\n  },\n\n  labels,\n\n  classes: {\n    table: [\"jsDataTable-table\"],\n    header: [],\n    input: [],\n    selector: [],\n    checkbox: [],\n  },\n};\n","import { Rows } from \"./rows\";\nimport { Columns } from \"./columns\";\nimport { dataToTable } from \"./table\";\nimport { defaultConfig } from \"./config\";\nimport {\n  isObject,\n  isJson,\n  createElement,\n  flush,\n  button,\n  truncate,\n  getStrings,\n} from \"./helpers\";\n\nexport class JSDataTable {\n  constructor(table, options = {}) {\n    const dom =\n      typeof table === \"string\" ? document.querySelector(table) : table;\n\n    let labels;\n    if (options.lang) {\n      labels = getStrings(options.lang);\n    } else {\n      labels = defaultConfig.labels;\n    }\n\n    // user options\n    this.options = {\n      ...defaultConfig,\n      ...options,\n      layout: {\n        ...defaultConfig.layout,\n        ...options.layout,\n      },\n      labels: {\n        ...labels,\n        ...options.labels,\n      },\n      classes: {\n        ...defaultConfig.classes,\n      },\n    };\n\n    if (options.classes) {\n      for (const [key, value] of Object.entries(this.options.classes)) {\n        this.options.classes[key] = value.concat(options.classes[key]);\n      }\n    }\n\n    this.initialized = false;\n\n    this.initialLayout = dom.innerHTML;\n    this.initialSortable = this.options.sortable;\n\n    // Disable manual sorting if no header is present (#4)\n    if (!this.options.header) {\n      this.options.sortable = false;\n    }\n\n    if (dom.tHead === null) {\n      if (\n        !this.options.data ||\n        (this.options.data && !this.options.data.headings)\n      ) {\n        this.options.sortable = false;\n      }\n    }\n\n    if (dom.tBodies.length && !dom.tBodies[0].rows.length) {\n      if (this.options.data) {\n        if (!this.options.data.data) {\n          throw new Error(\n            \"You seem to be using the data option, but you've not defined any rows.\"\n          );\n        }\n      }\n    }\n\n    this.dom = dom;\n\n    this.table = this.dom; // For compatibility. Remove in version 4\n\n    this.listeners = {\n      onResize: (event) => this.onResize(event),\n    };\n\n    this.init();\n  }\n\n  /**\n   * Add custom property or method to extend JSDataTable\n   * @param  {String} prop    - Method name or property\n   * @param  {Mixed} val      - Function or property value\n   * @return {Void}\n   */\n  static extend(prop, val) {\n    if (typeof val === \"function\") {\n      JSDataTable.prototype[prop] = val;\n    } else {\n      JSDataTable[prop] = val;\n    }\n  }\n\n  getSelected() {\n    let checked = 0;\n    const checkboxes = document.getElementsByName(\"jsDataTable_select\");\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked) {\n        checked++;\n      }\n    }\n\n    return checked;\n  }\n\n  getSelectedRows() {\n    const checked = [];\n    const checkboxes = document.getElementsByName(\"jsDataTable_select\");\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked) {\n        checked.push(checkboxes[i].closest(\"tr\").dataIndex);\n      }\n    }\n\n    return checked;\n  }\n\n  /**\n   * Initialize the instance\n   * @param  {Object} options\n   * @return {Void}\n   */\n  init(options) {\n    if (this.initialized || this.dom.classList.contains(\"jsDataTable-table\")) {\n      return false;\n    }\n\n    if (options) {\n      let labels;\n      if (options.lang) {\n        labels = getStrings(options.lang);\n      } else {\n        labels = getStrings();\n      }\n\n      // user options\n      options = {\n        ...this.options,\n        ...options,\n        layout: {\n          ...this.options.layout,\n          ...options.layout,\n        },\n        labels: {\n          ...labels,\n          ...options.labels,\n        },\n        classes: {\n          ...defaultConfig.classes,\n        },\n      };\n\n      if (options.classes) {\n        for (const [key, value] of Object.entries(options.classes)) {\n          options.classes[key] = value.concat(this.options.classes[key]);\n        }\n      }\n    }\n\n    Object.assign(this.options, options || {});\n\n    this.currentPage = 1;\n    this.onFirstPage = true;\n\n    this.hiddenColumns = [];\n    this.columnRenderers = [];\n    this.selectedColumns = [];\n\n    this.render();\n\n    setTimeout(() => {\n      this.emit(\"datatable.init\");\n      this.initialized = true;\n\n      if (this.options.plugins) {\n        Object.entries(this.options.plugins).forEach(([plugin, options]) => {\n          if (this[plugin] && typeof this[plugin] === \"function\") {\n            this[plugin] = this[plugin](options, { createElement });\n\n            // Init plugin\n            if (\n              options.enabled &&\n              this[plugin].init &&\n              typeof this[plugin].init === \"function\"\n            ) {\n              this[plugin].init();\n            }\n          }\n        });\n      }\n    }, 10);\n  }\n\n  /**\n   * Render the instance\n   * @param  {String} type\n   * @return {Void}\n   */\n  render(type) {\n    if (type) {\n      switch (type) {\n        case \"page\":\n          this.renderPage();\n          break;\n        case \"pager\":\n          this.renderPager();\n          break;\n        case \"header\":\n          this.renderHeader();\n          break;\n      }\n\n      return false;\n    }\n\n    this.renderData();\n  }\n\n  /**\n   * Render the instance\n   * @param  {String} type\n   * @return {Void}\n   */\n  renderData() {\n    const options = this.options;\n    let template = \"\";\n\n    // Convert data to HTML\n    if (options.data) {\n      if (options.selectable) {\n        if (options.data.headings && options.data.headings.length > 0) {\n          options.data.headings = this.makeSelectAll(options.data.headings);\n        }\n\n        if (options.data.data.length > 0) {\n          if (options.data.data && Array.isArray(options.data.data)) {\n            for (let i = 0; i < options.data.data.length; i++) {\n              options.data.data[i] = this.makeSelect(options.data.data[i]);\n            }\n          }\n        }\n      }\n      dataToTable.call(this);\n    } else {\n      if (options.selectable) {\n        // Put the checkbox on head\n        const th = document.createElement(\"th\");\n        th.classList.add(\"jsDataTable-select-cell\");\n        th.appendChild(this.makeCheckbox(true));\n        this.dom.tHead.rows\n          .item(0)\n          .insertBefore(th, this.dom.tHead.rows.item(0).firstChild);\n\n        // Put the checkbox on rows\n        const rows = this.dom.tBodies[0].querySelectorAll(\"tr\");\n        if (rows.length > 0) {\n          for (let i = 0; i < rows.length; i++) {\n            const td = document.createElement(\"td\");\n            td.appendChild(this.makeCheckbox());\n            this.dom.tBodies[0].rows.item(i).insertCell(0).appendChild(td);\n          }\n        }\n      }\n    }\n\n    // Store references\n    this.body = this.dom.tBodies[0];\n    this.head = this.dom.tHead;\n    this.foot = this.dom.tFoot;\n\n    if (!this.body) {\n      this.body = createElement(\"tbody\");\n\n      this.dom.appendChild(this.body);\n    }\n\n    this.hasRows = this.body.rows.length > 0;\n\n    // Make a tHead if there isn't one (fixes #8)\n    if (!this.head) {\n      const h = createElement(\"thead\");\n      const t = createElement(\"tr\");\n\n      if (this.hasRows) {\n        Array.from(this.body.rows[0].cells).forEach(() => {\n          t.appendChild(createElement(\"th\"));\n        });\n\n        h.appendChild(t);\n      }\n\n      this.head = h;\n\n      this.dom.insertBefore(this.head, this.body);\n\n      this.hiddenHeader = options.hiddenHeader;\n    }\n\n    this.headings = [];\n    this.hasHeadings = this.head.rows.length > 0;\n\n    if (this.hasHeadings) {\n      this.header = this.head.rows[0];\n      this.headings = [].slice.call(this.header.cells);\n    }\n\n    // Header\n    if (!options.header) {\n      if (this.head) {\n        this.dom.removeChild(this.dom.tHead);\n      }\n    }\n\n    // Footer\n    if (options.footer) {\n      if (this.head && !this.foot) {\n        this.foot = createElement(\"tfoot\", {\n          html: this.head.innerHTML,\n        });\n        this.dom.appendChild(this.foot);\n      }\n    } else {\n      if (this.foot) {\n        this.dom.removeChild(this.dom.tFoot);\n      }\n    }\n\n    // Build\n    this.wrapper = createElement(\"div\", {\n      class: \"jsDataTable-wrapper jsDataTable-loading\",\n    });\n\n    // Template for custom layouts\n    template += \"<div class='jsDataTable-top'>\";\n    template += options.layout.top;\n    template += \"</div>\";\n    if (options.scrollY.length) {\n      template += `<div class='jsDataTable-container' style='height: ${options.scrollY}; overflow-Y: auto;'></div>`;\n    } else {\n      template += \"<div class='jsDataTable-container'></div>\";\n    }\n    template += \"<div class='jsDataTable-bottom'>\";\n    template += options.layout.bottom;\n    template += \"</div>\";\n\n    // Info placement\n    template = template.replace(\n      \"{info}\",\n      options.paging ? \"<div class='jsDataTable-info'></div>\" : \"\"\n    );\n\n    // Per Page Select\n    if (options.paging && options.perPageSelect) {\n      let wrap = \"<div class='jsDataTable-dropdown'><label>\";\n      wrap += options.labels.perPage;\n      wrap += \"</label></div>\";\n\n      // Create the select\n      const select = createElement(\"select\", {\n        class: \"jsDataTable-selector\",\n      });\n\n      select.classList.add(...options.classes.selector);\n\n      // Create the options\n      options.perPageSelect.forEach((val) => {\n        const selected = val === options.perPage;\n        const option = new Option(val, val, selected, selected);\n        select.add(option);\n      });\n\n      // Custom label\n      wrap = wrap.replace(\"{select}\", select.outerHTML);\n\n      // Selector placement\n      template = template.replace(\"{select}\", wrap);\n    } else {\n      template = template.replace(\"{select}\", \"\");\n    }\n\n    // Searchable\n    if (options.searchable) {\n      const form = `<div class='jsDataTable-search'><input class='jsDataTable-input' placeholder='${options.labels.placeholder}' type='text'></div>`;\n\n      // Search input placement\n      template = template.replace(\"{search}\", form);\n    } else {\n      template = template.replace(\"{search}\", \"\");\n    }\n\n    if (this.hasHeadings) {\n      // Sortable\n      this.render(\"header\");\n    }\n\n    // Add table class\n    this.dom.classList.add(...this.options.classes.table);\n    if (options.header) {\n      this.dom.tHead.classList.add(...this.options.classes.header);\n    }\n\n    // Paginator\n    const paginatorWrapper = createElement(\"nav\", {\n      class: \"jsDataTable-pagination\",\n    });\n    const paginator = createElement(\"ul\", {\n      class: \"jsDataTable-pagination-list\",\n    });\n    paginatorWrapper.appendChild(paginator);\n\n    // Pager(s) placement\n    template = template.replace(/\\{pager\\}/g, paginatorWrapper.outerHTML);\n    this.wrapper.innerHTML = template;\n\n    this.container = this.wrapper.querySelector(\".jsDataTable-container\");\n\n    this.pagers = this.wrapper.querySelectorAll(\".jsDataTable-pagination-list\");\n\n    this.label = this.wrapper.querySelector(\".jsDataTable-info\");\n\n    // Insert in to DOM tree\n    this.dom.parentNode.replaceChild(this.wrapper, this.dom);\n    this.container.appendChild(this.dom);\n\n    // Store the table dimensions\n    this.rect = this.dom.getBoundingClientRect();\n\n    // Convert rows to array for processing\n    this.data = Array.from(this.body.rows);\n    this.activeRows = this.data.slice();\n    this.activeHeadings = this.headings.slice();\n\n    // Update\n    this.update();\n\n    this.setColumns();\n\n    // Fix height\n    this.fixHeight();\n\n    // Fix columns\n    this.fixColumns();\n\n    // Class names\n    if (!options.header) {\n      this.wrapper.classList.add(\"no-header\");\n    }\n\n    if (!options.footer) {\n      this.wrapper.classList.add(\"no-footer\");\n    }\n\n    if (options.sortable) {\n      this.wrapper.classList.add(\"sortable\");\n    }\n\n    if (options.searchable) {\n      this.wrapper.classList.add(\"searchable\");\n    }\n\n    if (options.fixedHeight) {\n      this.wrapper.classList.add(\"fixed-height\");\n    }\n\n    if (options.fixedColumns) {\n      this.wrapper.classList.add(\"fixed-columns\");\n    }\n\n    const input = this.wrapper.querySelector(\".jsDataTable-input\");\n    input.classList.add(...options.classes.input);\n\n    this.bindEvents();\n  }\n\n  getData() {\n    const options = this.options;\n    if (typeof options.data.data !== undefined) {\n      return options.data.data;\n    }\n    return [];\n  }\n\n  getOptions() {\n    const options = this.options;\n    return options;\n  }\n\n  /**\n   * Render the page\n   * @return {Void}\n   */\n  renderPage() {\n    if (this.hasHeadings) {\n      flush(this.header);\n\n      this.activeHeadings.forEach((th) => this.header.appendChild(th));\n    }\n\n    if (this.hasRows && this.totalPages) {\n      if (this.currentPage > this.totalPages) {\n        this.currentPage = 1;\n      }\n\n      // Use a fragment to limit touching the DOM\n      const index = this.currentPage - 1;\n\n      const frag = document.createDocumentFragment();\n      this.pages[index].forEach((row) =>\n        frag.appendChild(this.rows().render(row))\n      );\n\n      this.clear(frag);\n\n      this.onFirstPage = this.currentPage === 1;\n      this.onLastPage = this.currentPage === this.lastPage;\n    } else {\n      this.setMessage(this.options.labels.noRows);\n    }\n\n    // Update the info\n    let current = 0;\n\n    let f = 0;\n    let t = 0;\n    let items;\n\n    if (this.totalPages) {\n      current = this.currentPage - 1;\n      f = current * this.options.perPage;\n      t = f + this.pages[current].length;\n      f = f + 1;\n      items = this.searching ? this.searchData.length : this.data.length;\n    }\n\n    if (this.label && this.options.labels.info.length) {\n      // CUSTOM LABELS\n      const string = this.options.labels.info\n        .replace(\"{start}\", f)\n        .replace(\"{end}\", t)\n        .replace(\"{page}\", this.currentPage)\n        .replace(\"{pages}\", this.totalPages)\n        .replace(\"{rows}\", items);\n\n      this.label.innerHTML = items ? string : \"\";\n    }\n\n    if (this.currentPage == 1) {\n      this.fixHeight();\n    }\n\n    this.updateToggleEvents()\n  }\n\n  /**\n   * Render the pager(s)\n   * @return {Void}\n   */\n  renderPager() {\n    flush(this.pagers);\n\n    if (this.totalPages > 1) {\n      const c = \"pager\";\n      const frag = document.createDocumentFragment();\n      const prev = this.onFirstPage ? 1 : this.currentPage - 1;\n      const next = this.onLastPage ? this.totalPages : this.currentPage + 1;\n\n      // first button\n      if (this.options.firstLast) {\n        frag.appendChild(button(c, 1, this.options.firstText));\n      }\n\n      // prev button\n      if (this.options.nextPrev && !this.onFirstPage) {\n        frag.appendChild(button(c, prev, this.options.prevText));\n      }\n\n      let pager = this.links;\n\n      // truncate the links\n      if (this.options.truncatePager) {\n        pager = truncate(\n          this.links,\n          this.currentPage,\n          this.pages.length,\n          this.options.pagerDelta,\n          this.options.ellipsisText\n        );\n      }\n\n      // active page link\n      this.links[this.currentPage - 1].classList.add(\"active\");\n\n      // append the links\n      pager.forEach((p) => {\n        p.classList.remove(\"active\");\n        frag.appendChild(p);\n      });\n\n      this.links[this.currentPage - 1].classList.add(\"active\");\n\n      // next button\n      if (this.options.nextPrev && !this.onLastPage) {\n        frag.appendChild(button(c, next, this.options.nextText));\n      }\n\n      // first button\n      if (this.options.firstLast) {\n        frag.appendChild(button(c, this.totalPages, this.options.lastText));\n      }\n\n      // We may have more than one pager\n      this.pagers.forEach((pager) => {\n        pager.appendChild(frag.cloneNode(true));\n      });\n    }\n  }\n\n  /**\n   * Render the header\n   * @return {Void}\n   */\n  renderHeader() {\n    this.labels = [];\n\n    if (this.headings && this.headings.length) {\n      this.headings.forEach((th, i) => {\n        this.labels[i] = th.textContent;\n\n        if (\n          th.firstElementChild &&\n          th.firstElementChild.classList.contains(\"jsDataTable-sorter\")\n        ) {\n          th.innerHTML = th.firstElementChild.innerHTML;\n        }\n\n        th.sortable = th.getAttribute(\"data-sortable\") !== \"false\";\n\n        th.originalCellIndex = i;\n        if (this.options.sortable && th.sortable) {\n          const link = createElement(\"a\", {\n            href: \"#\",\n            class: \"jsDataTable-sorter\",\n            html: th.innerHTML,\n          });\n\n          th.innerHTML = \"\";\n          th.setAttribute(\"data-sortable\", \"\");\n          th.appendChild(link);\n        }\n      });\n    }\n\n    this.fixColumns();\n  }\n\n  /**\n   * Bind event listeners\n   * @return {[type]} [description]\n   */\n  bindEvents() {\n    const options = this.options;\n    // Per page selector\n    if (options.perPageSelect) {\n      const selector = this.wrapper.querySelector(\".jsDataTable-selector\");\n      if (selector) {\n        // Change per page\n        selector.addEventListener(\n          \"change\",\n          () => {\n            options.perPage = parseInt(selector.value, 10);\n            this.update();\n\n            this.fixHeight();\n\n            this.emit(\"datatable.perpage\", options.perPage);\n          },\n          false\n        );\n      }\n    }\n\n    // Search input\n    if (options.searchable) {\n      this.input = this.wrapper.querySelector(\".jsDataTable-input\");\n      if (this.input) {\n        this.input.addEventListener(\n          \"keyup\",\n          () => this.search(this.input.value),\n          false\n        );\n      }\n    }\n\n    // Pager(s) / sorting\n    this.wrapper.addEventListener(\n      \"click\",\n      (e) => {\n        const t = e.target.closest(\"a\");\n        if (t && t.nodeName.toLowerCase() === \"a\") {\n          if (t.hasAttribute(\"data-page\")) {\n            if (options.selectable) {\n              const checkboxes = document.getElementsByName(\n                \"jsDataTable_select\"\n              );\n              const selectAll = this.wrapper.querySelector(\n                \"#jsDataTable_select_all\"\n              );\n\n              for (let i = 0; i < checkboxes.length; i++) {\n                checkboxes[i].checked = false;\n              }\n              selectAll.checked = false;\n\n            }\n            this.page(t.getAttribute(\"data-page\"));\n            e.preventDefault();\n          } else if (\n            options.sortable &&\n            t.classList.contains(\"jsDataTable-sorter\") &&\n            t.parentNode.getAttribute(\"data-sortable\") != \"false\"\n          ) {\n            this.columns().sort(this.headings.indexOf(t.parentNode));\n            e.preventDefault();\n          }\n        }\n      },\n      false\n    );\n\n    //If selectable option is true add the checkboxes event listeners\n    if (options.selectable) {\n      // Select all\n      const selectAll = this.wrapper.querySelector(\"#jsDataTable_select_all\");\n      selectAll.addEventListener(\n        \"click\",\n        e => {\n          if (e.isTrusted) {\n            const checkboxes = document.getElementsByName(\"jsDataTable_select\");\n\n            for (let i = 0; i < checkboxes.length; i++) {\n              checkboxes[i].checked = selectAll.checked;\n            }\n\n            const details = {\n              selectedRows: this.dtCountChecked(),\n              totalRows: checkboxes.length\n            };\n\n            this.emit(\"datatable.select\", details);\n          }\n        },\n        false\n      );\n    }\n\n    window.addEventListener(\"resize\", this.listeners.onResize);\n  }\n\n  dtCountChecked() {\n    let checked = 0;\n    const checkboxes = document.getElementsByName(\"jsDataTable_select\");\n    for (let i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked) {\n        checked++;\n      }\n    }\n    return checked;\n  }\n\n  /**\n   * execute on resize\n   */\n  onResize() {\n    this.rect = this.container.getBoundingClientRect();\n    if (!this.rect.width) {\n      // No longer shown, likely no longer part of DOM. Give up.\n      return;\n    }\n    this.fixColumns();\n  }\n\n  /**\n   * Set up columns\n   * @return {[type]} [description]\n   */\n  setColumns(ajax) {\n    if (!ajax) {\n      this.data.forEach((row) => {\n        Array.from(row.cells).forEach((cell) => {\n          cell.data = cell.innerHTML;\n        });\n      });\n    }\n\n    if (this.options.selectable && !this.initialized) {\n      if (\n        this.options.hasOwnProperty(\"columns\") &&\n        this.options.columns.length > 0\n      ) {\n        for (let i = 0; i < this.options.columns.length; i++) {\n          this.options.columns[i].select = this.options.columns[i].select + 1;\n        }\n      } else {\n        this.options.columns = [];\n      }\n\n      // Adds a new column index to control the selection toggle\n      this.options.columns.unshift({\n        select: 0,\n        sortable: false,\n      });\n    }\n\n    // Check for the columns option\n    if (this.options.columns && this.headings.length) {\n      this.options.columns.forEach((data) => {\n        // convert single column selection to array\n        if (!Array.isArray(data.select)) {\n          data.select = [data.select];\n        }\n\n        if (\n          data.hasOwnProperty(\"render\") &&\n          typeof data.render === \"function\"\n        ) {\n          this.selectedColumns = this.selectedColumns.concat(data.select);\n\n          this.columnRenderers.push({\n            columns: data.select,\n            renderer: data.render,\n          });\n        }\n\n        // Add the data attributes to the th elements\n        data.select.forEach((column) => {\n          const th = this.headings[column];\n          if (data.type) {\n            th.setAttribute(\"data-type\", data.type);\n          }\n          if (data.format) {\n            th.setAttribute(\"data-format\", data.format);\n          }\n          if (data.hasOwnProperty(\"sortable\")) {\n            th.setAttribute(\"data-sortable\", data.sortable);\n          }\n\n          if (data.hasOwnProperty(\"hidden\")) {\n            if (data.hidden !== false) {\n              this.columns().hide([column]);\n            }\n          }\n\n          if (data.hasOwnProperty(\"sort\") && data.select.length === 1) {\n            this.columns().sort(data.select[0], data.sort, true);\n          }\n        });\n      });\n    }\n\n    if (this.hasRows) {\n      this.data.forEach((row, i) => {\n        row.dataIndex = i;\n        Array.from(row.cells).forEach((cell) => {\n          cell.data = cell.innerHTML;\n        });\n      });\n\n      if (this.selectedColumns.length) {\n        this.data.forEach((row) => {\n          Array.from(row.cells).forEach((cell, i) => {\n            if (this.selectedColumns.includes(i)) {\n              this.columnRenderers.forEach((options) => {\n                if (options.columns.includes(i)) {\n                  cell.innerHTML = options.renderer.call(\n                    this,\n                    cell.data,\n                    cell,\n                    row\n                  );\n                }\n              });\n            }\n          });\n        });\n      }\n\n      this.columns().rebuild();\n    }\n\n    this.render(\"header\");\n  }\n\n  /**\n   * Destroy the instance\n   * @return {void}\n   */\n  destroy() {\n    this.dom.innerHTML = this.initialLayout;\n\n    if (this.options.selectable) {\n      this.options.columns.shift();\n      if (\n        this.options.hasOwnProperty(\"columns\") &&\n        this.options.columns.length > 0\n      ) {\n        for (let i = 0; i < this.options.columns.length; i++) {\n          this.options.columns[i].select = this.options.columns[i].select - 1;\n        }\n      } else {\n        this.options.columns = [];\n      }\n    }\n\n    // Remove the className\n    this.dom.classList.remove(\"jsDataTable-table\");\n\n    // Remove the containers\n    this.wrapper.parentNode.replaceChild(this.dom, this.wrapper);\n\n    this.initialized = false;\n\n    window.removeEventListener(\"resize\", this.listeners.onResize);\n  }\n\n  /**\n   * Update the instance\n   * @return {Void}\n   */\n  update() {\n    this.wrapper.classList.remove(\"jsDataTable-empty\");\n\n    this.paginate(this);\n    this.render(\"page\");\n\n    this.links = [];\n\n    let i = this.pages.length;\n    while (i--) {\n      const num = i + 1;\n      this.links[i] = button(i === 0 ? \"active\" : \"\", num, num);\n    }\n\n    this.sorting = false;\n\n    this.render(\"pager\");\n\n    this.rows().update();\n\n    this.updateToggleEvents();\n\n    this.emit(\"datatable.update\");\n  }\n\n  updateToggleEvents() {\n     if (this.options.selectable) {\n       const selects = document.querySelectorAll(\".jsDataTable_select\");\n       const selectAll = this.wrapper.querySelector(\"#jsDataTable_select_all\");\n\n       selectAll.checked = false;\n       selectAll.indeterminate = false;\n\n       if (selects.length > 0) {\n         for (let i = 0; i < selects.length; i++) {\n           selects[i].checked = false;\n           selects[i].onclick = e => {\n             if (e.isTrusted) {\n               this.dtToggleIndividual();\n             }\n           };\n         }\n       }\n     }\n  }\n\n  dtToggleIndividual() {\n    const selects = this.wrapper.querySelectorAll(\".jsDataTable_select\");\n    const details = {\n      selectedRows: this.dtCountChecked(),\n      totalRows: selects.length\n    };\n\n    const selectAll = this.wrapper.querySelector(\"#jsDataTable_select_all\");\n    if (details.selectedRows == details.totalRows) {\n      selectAll.checked = true;\n      selectAll.indeterminate = false;\n    } else if (details.selectedRows > 0) {\n      selectAll.checked = false;\n      selectAll.indeterminate = true;\n    } else {\n      selectAll.checked = false;\n      selectAll.indeterminate = false;\n    }\n\n    this.emit(\"datatable.select\", details);\n  }\n\n  /**\n   * Sort rows into pages\n   * @return {Number}\n   */\n  paginate() {\n    const perPage = this.options.perPage;\n    let rows = this.activeRows;\n\n    if (this.searching) {\n      rows = [];\n\n      this.searchData.forEach((index) => rows.push(this.activeRows[index]));\n    }\n\n    if (this.options.paging) {\n      // Check for hidden columns\n      this.pages = rows\n        .map((tr, i) => (i % perPage === 0 ? rows.slice(i, i + perPage) : null))\n        .filter((page) => page);\n    } else {\n      this.pages = [rows];\n    }\n\n    this.totalPages = this.lastPage = this.pages.length;\n\n    return this.totalPages;\n  }\n\n  /**\n   * Fix column widths\n   * @return {Void}\n   */\n  fixColumns() {\n    if (\n      (this.options.scrollY.length || this.options.fixedColumns) &&\n      this.activeHeadings &&\n      this.activeHeadings.length\n    ) {\n      let cells;\n      let hd = false;\n      this.columnWidths = [];\n\n      // If we have headings we need only set the widths on them\n      // otherwise we need a temp header and the widths need applying to all cells\n      if (this.dom.tHead) {\n        if (this.options.scrollY.length) {\n          hd = createElement(\"thead\");\n          hd.appendChild(createElement(\"tr\"));\n          hd.style.height = \"0px\";\n          if (this.headerTable) {\n            // move real header back into place\n            this.dom.tHead = this.headerTable.tHead;\n          }\n        }\n\n        // Reset widths\n        this.activeHeadings.forEach((cell) => {\n          cell.style.width = \"\";\n        });\n\n        this.activeHeadings.forEach((cell, i) => {\n          const ow = cell.offsetWidth;\n          const w = (ow / this.rect.width) * 100;\n          cell.style.width = `${w}%`;\n          this.columnWidths[i] = ow;\n          if (this.options.scrollY.length) {\n            const th = createElement(\"th\");\n            hd.firstElementChild.appendChild(th);\n            th.style.width = `${w}%`;\n            th.style.paddingTop = \"0\";\n            th.style.paddingBottom = \"0\";\n            th.style.border = \"0\";\n          }\n        });\n\n        if (this.options.scrollY.length) {\n          const container = this.dom.parentElement;\n          if (!this.headerTable) {\n            this.headerTable = createElement(\"table\", {\n              class: \"jsDataTable-table\",\n            });\n            const headercontainer = createElement(\"div\", {\n              class: \"jsDataTable-headercontainer\",\n            });\n            headercontainer.appendChild(this.headerTable);\n            container.parentElement.insertBefore(headercontainer, container);\n          }\n          const thd = this.dom.tHead;\n          this.dom.replaceChild(hd, thd);\n          this.headerTable.tHead = thd;\n\n          // Compensate for scrollbars.\n          this.headerTable.parentElement.style.paddingRight = `${\n            this.headerTable.clientWidth -\n            this.dom.clientWidth +\n            parseInt(\n              this.headerTable.parentElement.style.paddingRight || \"0\",\n              10\n            )\n          }px`;\n\n          if (container.scrollHeight > container.clientHeight) {\n            // scrollbars on one page means scrollbars on all pages.\n            container.style.overflowY = \"scroll\";\n          }\n        }\n      } else {\n        cells = [];\n\n        // Make temperary headings\n        hd = createElement(\"thead\");\n        const r = createElement(\"tr\");\n        Array.from(this.dom.tBodies[0].rows[0].cells).forEach(() => {\n          const th = createElement(\"th\");\n          r.appendChild(th);\n          cells.push(th);\n        });\n\n        hd.appendChild(r);\n        this.dom.insertBefore(hd, this.body);\n\n        const widths = [];\n        cells.forEach((cell, i) => {\n          const ow = cell.offsetWidth;\n          const w = (ow / this.rect.width) * 100;\n          widths.push(w);\n          this.columnWidths[i] = ow;\n        });\n\n        this.data.forEach((row) => {\n          Array.from(row.cells).forEach((cell, i) => {\n            if (this.columns(cell.cellIndex).visible())\n              cell.style.width = `${widths[i]}%`;\n          });\n        });\n\n        // Discard the temp header\n        this.dom.removeChild(hd);\n      }\n    }\n  }\n\n  /**\n   * Fix the container height\n   * @return {Void}\n   */\n  fixHeight() {\n    if (this.options.fixedHeight) {\n      this.container.style.height = null;\n      this.rect = this.container.getBoundingClientRect();\n      this.container.style.height = `${this.rect.height}px`;\n    }\n  }\n\n  // Remove diacritics for better searching\n  removeDiacritics(str) {\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n\n  /**\n   * Perform a search of the data set\n   * @param  {string} query\n   * @return {void}\n   */\n  search(query) {\n    if (!this.hasRows) return false;\n\n    query = query.toLowerCase();\n\n    this.currentPage = 1;\n    this.searching = true;\n    this.searchData = [];\n\n    if (!query.length) {\n      this.searching = false;\n      this.update();\n      this.emit(\"datatable.search\", query, this.searchData);\n      this.wrapper.classList.remove(\"search-results\");\n      return false;\n    }\n\n    this.clear();\n\n    this.data.forEach((row, idx) => {\n      const inArray = this.searchData.includes(row);\n\n      // https://github.com/Mobius1/Vanilla-DataTables/issues/12\n      const doesQueryMatch = query.split(\" \").reduce((bool, word) => {\n        let includes = false;\n        let cell = null;\n        let content = null;\n\n        for (let x = 0; x < row.cells.length; x++) {\n          cell = row.cells[x];\n          content = cell.hasAttribute(\"data-content\")\n            ? cell.getAttribute(\"data-content\")\n            : cell.textContent;\n\n          const contentPrepared = this.removeDiacritics(content.toLowerCase());\n          const wordPrepared = this.removeDiacritics(word);\n\n          if (\n            contentPrepared.includes(wordPrepared) &&\n            this.columns(cell.cellIndex).visible()\n          ) {\n            includes = true;\n            break;\n          }\n        }\n\n        return bool && includes;\n      }, true);\n\n      if (doesQueryMatch && !inArray) {\n        row.searchIndex = idx;\n        this.searchData.push(idx);\n      } else {\n        row.searchIndex = null;\n      }\n    });\n\n    this.wrapper.classList.add(\"search-results\");\n\n    if (!this.searchData.length) {\n      this.wrapper.classList.remove(\"search-results\");\n\n      this.setMessage(this.options.labels.noResults);\n    } else {\n      this.update();\n    }\n\n    this.emit(\"datatable.search\", query, this.searchData);\n  }\n\n  /**\n   * Change page\n   * @param  {int} page\n   * @return {void}\n   */\n  page(page) {\n    // We don't want to load the current page again.\n    if (page == this.currentPage) {\n      return false;\n    }\n\n    if (!isNaN(page)) {\n      this.currentPage = parseInt(page, 10);\n    }\n\n    if (page > this.pages.length || page < 0) {\n      return false;\n    }\n\n    this.render(\"page\");\n    this.render(\"pager\");\n\n    this.emit(\"datatable.page\", page);\n  }\n\n  /**\n   * Sort by column\n   * @param  {int} column - The column no.\n   * @param  {string} direction - asc or desc\n   * @return {void}\n   */\n  sortColumn(column, direction) {\n    // Use columns API until sortColumn method is removed\n    this.columns().sort(column, direction);\n  }\n\n  makeCheckbox(all = false) {\n    let name = \"jsDataTable_select\";\n    if (all) {\n      name = `${name}_all`;\n    }\n    const sel = document.createElement(\"input\");\n    sel.type = \"checkbox\";\n    sel.name = name;\n    if (all) {\n      sel.id = name;\n    }\n    sel.autocomplete = false;\n    sel.classList.add(name);\n    sel.classList.add(...this.options.classes.checkbox);\n    sel.autocomplete = false;\n    return sel;\n  }\n\n  makeSelect(row) {\n    const sel = this.makeCheckbox();\n    row.unshift(sel.outerHTML);\n\n    return row;\n  }\n\n  /** Build Select Toggler on Header */\n  makeSelectAll(head) {\n    // Creates the selection toggler and puts it in the the header first cell\n    const selectAll = this.makeCheckbox(true);\n    head.unshift(selectAll.outerHTML);\n\n    return head;\n  }\n\n  /**\n   * Add new row data\n   * @param {object} data\n   */\n  insert(data) {\n    let rows = [];\n    if (isObject(data)) {\n      if (data.headings) {\n        if (!this.hasHeadings && !this.hasRows) {\n          const tr = createElement(\"tr\");\n          data.headings.forEach((heading) => {\n            const th = createElement(\"th\", {\n              html: heading,\n            });\n\n            tr.appendChild(th);\n          });\n          this.head.appendChild(tr);\n\n          this.header = tr;\n          this.headings = [].slice.call(tr.cells);\n          this.hasHeadings = true;\n\n          // Re-enable sorting if it was disabled due\n          // to missing header\n          this.options.sortable = this.initialSortable;\n\n          // Allow sorting on new header\n          this.render(\"header\");\n\n          // Activate newly added headings\n          this.activeHeadings = this.headings.slice();\n        }\n      }\n\n      if (data.data && Array.isArray(data.data)) {\n        data.data = this.preparedData(data.data);\n        for (let i = 0; i < data.data.length; i++) {\n          data.data[i] = this.makeSelect(data.data[i]);\n        }\n\n        rows = data.data;\n      }\n    } else if (Array.isArray(data)) {\n      data.forEach((row) => {\n        const r = [];\n        Object.entries(row).forEach(([heading, cell]) => {\n          const index = this.labels.indexOf(heading);\n\n          if (index > -1) {\n            r[index] = cell;\n          }\n        });\n        rows.push(r);\n      });\n    }\n    if (rows.length) {\n      this.rows().add(rows);\n\n      this.hasRows = true;\n    }\n\n    this.update();\n    this.setColumns();\n    this.fixColumns();\n  }\n\n  preparedData(data) {\n    const preparedData = [];\n    for (let i = 0; i < data.length; i++) {\n      let aux = [];\n      if (typeof data[i] === \"object\" && data[i] !== null) {\n        aux = Object.values(data[i]);\n        for (let j = 0; j < aux.length; j++) {\n          if (typeof aux[j] !== \"string\") {\n            aux[j] = `${aux[j]}`;\n          }\n        }\n      } else if (Array.isArray(data[i])) {\n        for (let j = 0; j < data[i].length; j++) {\n          if (typeof data[i][j] !== \"string\") {\n            data[i][j] = `${data[i][j]}`;\n          }\n        }\n        aux = data[i];\n      }\n      if (aux.length > 0) {\n        preparedData.push(aux);\n      }\n    }\n    return preparedData;\n  }\n\n  /**\n   * Refresh the instance\n   * @return {void}\n   */\n  refresh() {\n    if (this.options.searchable) {\n      this.input.value = \"\";\n      this.searching = false;\n    }\n    this.currentPage = 1;\n    this.onFirstPage = true;\n    this.update();\n\n    this.emit(\"datatable.refresh\");\n  }\n\n  /**\n   * Truncate the table\n   * @param  {mixes} html - HTML string or HTMLElement\n   * @return {void}\n   */\n  clear(html) {\n    if (this.body) {\n      flush(this.body);\n    }\n\n    let parent = this.body;\n    if (!this.body) {\n      parent = this.dom;\n    }\n\n    if (html) {\n      if (typeof html === \"string\") {\n        const frag = document.createDocumentFragment();\n        frag.innerHTML = html;\n      }\n\n      parent.appendChild(html);\n    }\n  }\n\n  /**\n   * Export table to various formats (csv, txt or sql)\n   * @param  {Object} userOptions User options\n   * @return {Boolean}\n   */\n  export(userOptions) {\n    if (!this.hasHeadings && !this.hasRows) return false;\n\n    const headers = this.activeHeadings;\n    let rows = [];\n    const arr = [];\n    let i;\n    let x;\n    let str;\n    let link;\n\n    const defaults = {\n      download: true,\n      skipColumn: [],\n\n      // csv\n      lineDelimiter: \"\\n\",\n      columnDelimiter: \",\",\n\n      // sql\n      tableName: \"myTable\",\n\n      // json\n      replacer: null,\n      space: 4,\n    };\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n      return false;\n    }\n\n    const options = {\n      ...defaults,\n      ...userOptions,\n    };\n\n    if (options.type) {\n      if (options.type === \"txt\" || options.type === \"csv\") {\n        // Include headings\n        rows[0] = this.header;\n      }\n\n      // Selection or whole table\n      if (options.selection) {\n        // Page number\n        if (!isNaN(options.selection)) {\n          rows = rows.concat(this.pages[options.selection - 1]);\n        } else if (Array.isArray(options.selection)) {\n          // Array of page numbers\n          for (i = 0; i < options.selection.length; i++) {\n            rows = rows.concat(this.pages[options.selection[i] - 1]);\n          }\n        }\n      } else {\n        rows = rows.concat(this.activeRows);\n      }\n\n      // Only proceed if we have data\n      if (rows.length) {\n        if (options.type === \"txt\" || options.type === \"csv\") {\n          str = \"\";\n\n          for (i = 0; i < rows.length; i++) {\n            for (x = 0; x < rows[i].cells.length; x++) {\n              // Check for column skip and visibility\n              if (\n                !options.skipColumn.includes(headers[x].originalCellIndex) &&\n                this.columns(headers[x].originalCellIndex).visible()\n              ) {\n                let text = rows[i].cells[x].textContent;\n                text = text.trim();\n                text = text.replace(/\\s{2,}/g, \" \");\n                text = text.replace(/\\n/g, \"  \");\n                text = text.replace(/\"/g, '\"\"');\n                //have to manually encode \"#\" as encodeURI leaves it as is.\n                text = text.replace(/#/g, \"%23\");\n                if (text.includes(\",\")) text = `\"${text}\"`;\n\n                str += text + options.columnDelimiter;\n              }\n            }\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1);\n\n            // Apply line delimiter\n            str += options.lineDelimiter;\n          }\n\n          // Remove trailing line delimiter\n          str = str.trim().substring(0, str.length - 1);\n\n          if (options.download) {\n            str = `data:text/csv;charset=utf-8,${str}`;\n          }\n        } else if (options.type === \"sql\") {\n          // Begin INSERT statement\n          str = `INSERT INTO \\`${options.tableName}\\` (`;\n\n          // Convert table headings to column names\n          for (i = 0; i < headers.length; i++) {\n            // Check for column skip and column visibility\n            if (\n              !options.skipColumn.includes(headers[i].originalCellIndex) &&\n              this.columns(headers[i].originalCellIndex).visible()\n            ) {\n              str += `\\`${headers[i].textContent}\\`,`;\n            }\n          }\n\n          // Remove trailing comma\n          str = str.trim().substring(0, str.length - 1);\n\n          // Begin VALUES\n          str += \") VALUES \";\n\n          // Iterate rows and convert cell data to column values\n          for (i = 0; i < rows.length; i++) {\n            str += \"(\";\n\n            for (x = 0; x < rows[i].cells.length; x++) {\n              // Check for column skip and column visibility\n              if (\n                !options.skipColumn.includes(headers[x].originalCellIndex) &&\n                this.columns(headers[x].originalCellIndex).visible()\n              ) {\n                str += `\"${rows[i].cells[x].textContent}\",`;\n              }\n            }\n\n            // Remove trailing comma\n            str = str.trim().substring(0, str.length - 1);\n\n            // end VALUES\n            str += \"),\";\n          }\n\n          // Remove trailing comma\n          str = str.trim().substring(0, str.length - 1);\n\n          // Add trailing colon\n          str += \";\";\n\n          if (options.download) {\n            str = `data:application/sql;charset=utf-8,${str}`;\n          }\n        } else if (options.type === \"json\") {\n          // Iterate rows\n          for (x = 0; x < rows.length; x++) {\n            arr[x] = arr[x] || {};\n            // Iterate columns\n            for (i = 0; i < headers.length; i++) {\n              // Check for column skip and column visibility\n              if (\n                !options.skipColumn.includes(headers[i].originalCellIndex) &&\n                this.columns(headers[i].originalCellIndex).visible()\n              ) {\n                arr[x][headers[i].textContent] = rows[x].cells[i].textContent;\n              }\n            }\n          }\n\n          // Convert the array of objects to JSON string\n          str = JSON.stringify(arr, options.replacer, options.space);\n\n          if (options.download) {\n            str = `data:application/json;charset=utf-8,${str}`;\n          }\n        }\n\n        // Download\n        if (options.download) {\n          // Filename\n          options.filename = options.filename || \"datatable_export\";\n          options.filename += `.${options.type}`;\n\n          str = encodeURI(str);\n\n          // Create a link to trigger the download\n          link = document.createElement(\"a\");\n          link.href = str;\n          link.download = options.filename;\n\n          // Append the link\n          document.body.appendChild(link);\n\n          // Trigger the download\n          link.click();\n\n          // Remove the link\n          document.body.removeChild(link);\n        }\n\n        return str;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Import data to the table\n   * @param  {Object} userOptions User options\n   * @return {Boolean}\n   */\n  import(userOptions) {\n    let obj = false;\n    const defaults = {\n      // csv\n      lineDelimiter: \"\\n\",\n      columnDelimiter: \",\",\n    };\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n      return false;\n    }\n\n    const options = {\n      ...defaults,\n      ...userOptions,\n    };\n\n    if (options.data.length || isObject(options.data)) {\n      // Import CSV\n      if (options.type === \"csv\") {\n        obj = {\n          data: [],\n        };\n\n        // Split the string into rows\n        const rows = options.data.split(options.lineDelimiter);\n\n        if (rows.length) {\n          if (options.headings) {\n            obj.headings = rows[0].split(options.columnDelimiter);\n\n            rows.shift();\n          }\n\n          rows.forEach((row, i) => {\n            obj.data[i] = [];\n\n            // Split the rows into values\n            const values = row.split(options.columnDelimiter);\n\n            if (values.length) {\n              values.forEach((value) => {\n                obj.data[i].push(value);\n              });\n            }\n          });\n        }\n      } else if (options.type === \"json\") {\n        const json = isJson(options.data);\n\n        // Valid JSON string\n        if (json) {\n          obj = {\n            headings: [],\n            data: [],\n          };\n\n          json.forEach((data, i) => {\n            obj.data[i] = [];\n            Object.entries(data).forEach(([column, value]) => {\n              if (!obj.headings.includes(column)) {\n                obj.headings.push(column);\n              }\n\n              obj.data[i].push(value);\n            });\n          });\n        } else {\n          // console.warn(\"That's not valid JSON!\")\n        }\n      }\n\n      if (isObject(options.data)) {\n        obj = options.data;\n      }\n\n      if (obj) {\n        // Add the rows\n        this.insert(obj);\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Print the table\n   * @return {void}\n   */\n  print() {\n    const headings = this.activeHeadings;\n    const rows = this.activeRows;\n    const table = createElement(\"table\");\n    const thead = createElement(\"thead\");\n    const tbody = createElement(\"tbody\");\n\n    const tr = createElement(\"tr\");\n    headings.forEach((th) => {\n      tr.appendChild(\n        createElement(\"th\", {\n          html: th.textContent,\n        })\n      );\n    });\n\n    thead.appendChild(tr);\n\n    rows.forEach((row) => {\n      const tr = createElement(\"tr\");\n      Array.from(row.cells).forEach((cell) => {\n        tr.appendChild(\n          createElement(\"td\", {\n            html: cell.textContent,\n          })\n        );\n      });\n      tbody.appendChild(tr);\n    });\n\n    table.appendChild(thead);\n    table.appendChild(tbody);\n\n    // Open new window\n    const w = window.open();\n\n    // Append the table to the body\n    w.document.body.appendChild(table);\n\n    // Print\n    w.print();\n  }\n\n  /**\n   * Show a message in the table\n   * @param {string} message\n   */\n  setMessage(message) {\n    let colspan = 1;\n\n    if (this.hasRows) {\n      colspan = this.data[0].cells.length;\n    } else if (this.activeHeadings.length) {\n      colspan = this.activeHeadings.length;\n    }\n\n    this.wrapper.classList.add(\"jsDataTable-empty\");\n\n    if (this.label) {\n      this.label.innerHTML = \"\";\n    }\n    this.totalPages = 0;\n    this.render(\"pager\");\n\n    this.clear(\n      createElement(\"tr\", {\n        html: `<td class=\"jsDataTables-empty\" colspan=\"${colspan}\">${message}</td>`,\n      })\n    );\n  }\n\n  /**\n   * Columns API access\n   * @return {Object} new Columns instance\n   */\n  columns(columns) {\n    return new Columns(this, columns);\n  }\n\n  /**\n   * Rows API access\n   * @return {Object} new Rows instance\n   */\n  rows(rows) {\n    return new Rows(this, rows);\n  }\n\n  /**\n   * Add custom event listener\n   * @param  {String} event\n   * @param  {Function} callback\n   * @return {Void}\n   */\n  on(event, callback) {\n    this.events = this.events || {};\n    this.events[event] = this.events[event] || [];\n    this.events[event].push(callback);\n  }\n\n  /**\n   * Remove custom event listener\n   * @param  {String} event\n   * @param  {Function} callback\n   * @return {Void}\n   */\n  off(event, callback) {\n    this.events = this.events || {};\n    if (event in this.events === false) return;\n    this.events[event].splice(this.events[event].indexOf(callback), 1);\n  }\n\n  /**\n   * Fire custom event\n   * @param  {String} event\n   * @return {Void}\n   */\n  emit(event) {\n    this.events = this.events || {};\n    if (event in this.events === false) return;\n    for (let i = 0; i < this.events[event].length; i++) {\n      this.events[event][i].apply(\n        this,\n        Array.prototype.slice.call(arguments, 1)\n      );\n    }\n  }\n}\n"],"names":["strings","en","placeholder","perPage","noRows","noResults","info","pt","es","de","it","ru","isObject","val","Object","prototype","toString","call","createElement","nodeName","attrs","dom","document","attr","innerHTML","setAttribute","flush","el","NodeList","forEach","e","button","className","page","text","class","html","sortItems","a","b","inputArr","lang","documentElement","len","length","i","j","value","localeCompare","numeric","tmp","bubbleSort","reverse","getStrings","substring","toLowerCase","Rows","constructor","dt","rows","this","build","row","tr","headings","map","h","td","data","appendChild","render","add","Array","isArray","push","hasRows","update","columns","rebuild","remove","select","sort","splice","dataIndex","findRowIndex","columnIndex","findIndex","children","innerText","includes","String","findRow","index","cols","cells","r","updateRow","Columns","swap","x","y","order","c","d","s","cell","temp","column","getAttribute","cloneNode","originalCellIndex","sortable","hiddenColumns","searchIndex","undefined","activeHeadings","activeRows","hide","show","indexOf","visible","th","isNaN","insert","heading","hiddenHeader","type","format","hasOwnProperty","renderHeader","removeChild","filter","dir","init","terms","filterState","originalData","filters","rowFilter","filteredRows","from","content","hasAttribute","clear","setMessage","options","labels","emit","hasHeadings","filterTerms","textContent","sorting","alpha","n","waitFor","import","then","parseDate","date","Promise","all","importedFunctions","parseFunction","top","btm","num","replace","parseFloat","Number","classList","contains","lastTh","concat","indexes","v","searchData","cellIndex","dataToTable","thead","tbody","classes","table","col","idx","selectable","Error","tHead","tBodies","defaultConfig","searchable","paging","perPageSelect","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","ascText","descText","truncatePager","pagerDelta","scrollY","fixedColumns","fixedHeight","header","footer","layout","bottom","input","selector","checkbox","JSDataTable","querySelector","key","entries","initialized","initialLayout","initialSortable","listeners","onResize","event","static","prop","getSelected","checked","checkboxes","getElementsByName","getSelectedRows","closest","assign","currentPage","onFirstPage","columnRenderers","selectedColumns","setTimeout","plugins","plugin","enabled","renderPage","renderPager","renderData","template","makeSelectAll","makeSelect","makeCheckbox","item","insertBefore","firstChild","querySelectorAll","insertCell","body","head","foot","tFoot","t","slice","wrapper","wrap","selected","option","Option","outerHTML","form","paginatorWrapper","paginator","container","pagers","label","parentNode","replaceChild","rect","getBoundingClientRect","setColumns","fixHeight","fixColumns","bindEvents","getData","getOptions","totalPages","frag","createDocumentFragment","pages","onLastPage","lastPage","items","current","f","searching","string","updateToggleEvents","prev","next","pager","links","ellipsis","g","k","l","truncate","p","firstElementChild","link","href","addEventListener","parseInt","search","target","selectAll","preventDefault","isTrusted","details","selectedRows","dtCountChecked","totalRows","window","width","ajax","unshift","renderer","hidden","destroy","shift","removeEventListener","paginate","selects","indeterminate","onclick","dtToggleIndividual","hd","columnWidths","style","height","headerTable","ow","offsetWidth","w","paddingTop","paddingBottom","border","parentElement","headercontainer","thd","paddingRight","clientWidth","scrollHeight","clientHeight","overflowY","widths","removeDiacritics","str","normalize","query","inArray","split","reduce","bool","word","contentPrepared","wordPrepared","sortColumn","direction","name","sel","id","autocomplete","preparedData","aux","values","refresh","parent","export","userOptions","headers","arr","download","skipColumn","lineDelimiter","columnDelimiter","tableName","replacer","space","selection","trim","JSON","stringify","filename","encodeURI","click","obj","json","parse","isJson","print","open","message","colspan","on","callback","events","off","apply","arguments"],"mappings":"AAAO,MAAMA,EAAU,CACrBC,GAAI,CACFC,YAAa,YACbC,QAAS,4BACTC,OAAQ,mBACRC,UAAW,qCACXC,KAAM,8CAERC,GAAI,CACFL,YAAa,YACbC,QAAS,gCACTC,OAAQ,6BACRC,UAAW,+CACXC,KAAM,kDAERE,GAAI,CACFN,YAAa,cACbC,QAAS,+BACTC,OAAQ,0BACRC,UAAW,wDACXC,KAAM,gDAERG,GAAI,CACFP,YAAa,YACbC,QAAS,8BACTC,OAAQ,0BACRC,UAAW,yDACXC,KAAM,8DAERI,GAAI,CACFR,YAAa,aACbC,QAAS,2BACTC,OAAQ,uBACRC,UAAW,yDACXC,KAAM,qDAERK,GAAI,CACFT,YAAa,WACbC,QAAS,+BACTC,OAAQ,qBACRC,UAAW,sCACXC,KAAM,kDCnCGM,EAAWC,GAA+C,oBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,GAuBjDK,EAAgB,CAACC,EAAUC,KACpC,MAAMC,EAAMC,SAASJ,cAAcC,GACnC,GAAIC,GAAS,iBAAmBA,EAC5B,IAAK,MAAMG,KAAQH,EACX,SAAWG,EACXF,EAAIG,UAAYJ,EAAMG,GAEtBF,EAAII,aAAaF,EAAMH,EAAMG,IAIzC,OAAOF,CAAP,EAGSK,EAAQC,IACbA,aAAcC,SACdD,EAAGE,SAAQC,GAAKJ,EAAMI,KAEtBH,EAAGH,UAAY,EAClB,EAUQO,EAAS,CAACC,EAAWC,EAAMC,IAAShB,EAC7C,KAAM,CACFiB,MAAOH,EACPI,KAAO,0BAAyBH,MAASC,UA2BpCG,EAAY,CAACC,EAAGC,KACzBD,EAxBeE,KACjB,MAAMC,EAAOnB,SAASoB,gBAAgBD,MAAQ,KACxCE,EAAMH,EAASI,OACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKE,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKG,IACvB,GAAIA,EAAI,EAAIH,GAERH,EAASM,GAAGC,MACT/B,WACAgC,cAAcR,EAASM,EAAI,GAAGC,MAAM/B,WAAYyB,EAAM,CACrDQ,SAAS,IACN,EACP,CACA,MAAMC,EAAMV,EAASM,GACrBN,EAASM,GAAKN,EAASM,EAAI,GAC3BN,EAASM,EAAI,GAAKI,CACnB,CAIP,OAAOV,CAAP,EAIMW,CAAWb,IACL,GAANC,IACAD,EAAIA,EAAEc,WAELd,GA8CIe,EAAa,CAACZ,GAAO,KAC3BA,IACHA,EAAOnB,SAASoB,gBAAgBD,MAAQ,OAG1CA,EAAOA,EAAKa,UAAU,EAAG,GAAGC,iBAEdvD,IACZyC,EAAO,MAGFzC,EAAQyC,IChJV,MAAMe,EACXC,YAAYC,EAAIC,GAId,OAHAC,KAAKF,GAAKA,EACVE,KAAKD,KAAOA,EAELC,IACR,CAODC,MAAMC,GACJ,MAAMC,EAAK7C,EAAc,MAEzB,IAAI8C,EAAWJ,KAAKF,GAAGM,SAqBvB,OAnBKA,EAASpB,SACZoB,EAAWF,EAAIG,KAAI,IAAM,MAG3BD,EAASnC,SAAQ,CAACqC,EAAGrB,KACnB,MAAMsB,EAAKjD,EAAc,MAGpB4C,EAAIjB,IAAOiB,EAAIjB,GAAGD,SACrBkB,EAAIjB,GAAK,IAGXsB,EAAG3C,UAAYsC,EAAIjB,GAEnBsB,EAAGC,KAAON,EAAIjB,GAEdkB,EAAGM,YAAYF,EAAf,IAGKJ,CACR,CAEDO,OAAOR,GACL,OAAOA,CACR,CAMDS,IAAIH,GACF,GAAII,MAAMC,QAAQL,GAAO,CACvB,MAAMV,EAAKE,KAAKF,GAEZc,MAAMC,QAAQL,EAAK,IACrBA,EAAKvC,SAAQiC,IACXJ,EAAGU,KAAKM,KAAKd,KAAKC,MAAMC,GAAxB,IAGFJ,EAAGU,KAAKM,KAAKd,KAAKC,MAAMO,IAItBV,EAAGU,KAAKxB,SACVc,EAAGiB,SAAU,GAGff,KAAKgB,SAELlB,EAAGmB,UAAUC,SACd,CACF,CAODC,OAAOC,GACL,MAAMtB,EAAKE,KAAKF,GAEZc,MAAMC,QAAQO,IAEhBA,EAAOC,MAAK,CAAC3C,EAAGC,IAAMA,EAAID,IAE1B0C,EAAOnD,SAAQiC,IACbJ,EAAGU,KAAKc,OAAOpB,EAAK,EAApB,KAEiB,OAAVkB,EACTtB,EAAGU,KAAO,GAEVV,EAAGU,KAAKc,OAAOF,EAAQ,GAIpBtB,EAAGU,KAAKxB,SACXc,EAAGiB,SAAU,GAGff,KAAKgB,SACLlB,EAAGmB,UAAUC,SACd,CAMDF,SACEhB,KAAKF,GAAGU,KAAKvC,SAAQ,CAACiC,EAAKjB,KACzBiB,EAAIqB,UAAYtC,CAAhB,GAEH,CAQDuC,aAAaC,EAAatC,GAGxB,OAAOa,KAAKF,GAAGU,KAAKkB,WAAUvB,GAAMA,EAAGwB,SAASF,GAAaG,UACxDjC,cACAkC,SAASC,OAAO3C,GAAOQ,gBAE7B,CAQDoC,QAAQN,EAAatC,GAEnB,MAAM6C,EAAQhC,KAAKwB,aAAaC,EAAatC,GAE7C,GAAI6C,EAAQ,EACV,MAAO,CACLA,OAAQ,EACR9B,IAAK,KACL+B,KAAM,IAIV,MAAM/B,EAAMF,KAAKF,GAAGU,KAAKwB,GAIzB,MAAO,CACLA,QACA9B,MACA+B,KALW,IAAI/B,EAAIgC,OAAO7B,KAAI8B,GAAKA,EAAEvE,YAOxC,CAQDwE,UAAUhB,EAAQZ,GAChB,MAAMN,EAAMF,KAAKC,MAAMO,GACvBR,KAAKF,GAAGU,KAAKc,OAAOF,EAAQ,EAAGlB,GAC/BF,KAAKgB,SACLhB,KAAKF,GAAGmB,UAAUC,SACnB,ECrKI,MAAMmB,EACXxC,YAAYC,GAEV,OADAE,KAAKF,GAAKA,EACHE,IACR,CAMDsC,KAAKrB,GACH,GAAIA,EAAQjC,QAA6B,IAAnBiC,EAAQjC,OAAc,CAC1C,MAAMiD,EAAO,GAGbjC,KAAKF,GAAGM,SAASnC,SAAQ,CAACqC,EAAGrB,KAC3BgD,EAAKnB,KAAK7B,EAAV,IAGF,MAAMsD,EAAItB,EAAQ,GACZuB,EAAIvB,EAAQ,GACZtC,EAAIsD,EAAKO,GACfP,EAAKO,GAAKP,EAAKM,GACfN,EAAKM,GAAK5D,EAEVqB,KAAKyC,MAAMR,EACZ,CACF,CAMDQ,MAAMxB,GACJ,IAAIvC,EACAC,EACA+D,EACAC,EACArC,EACAsC,EACAC,EAEJ,MAAMC,EAAO,CAAC,GAAI,GAAI,GAAI,IAEpBhD,EAAKE,KAAKF,GAGhBmB,EAAQhD,SAAQ,CAAC8E,EAAQR,KACvBjC,EAAIR,EAAGM,SAAS2C,GAChBH,EAAwC,UAApCtC,EAAE0C,aAAa,iBACnBtE,EAAI4B,EAAE2C,WAAU,GAChBvE,EAAEwE,kBAAoBX,EACtB7D,EAAEyE,SAAWP,EAEbE,EAAK,GAAGhC,KAAKpC,GAERoB,EAAGsD,cAAcvB,SAASkB,KAC7BpE,EAAI2B,EAAE2C,WAAU,GAChBtE,EAAEuE,kBAAoBX,EACtB5D,EAAEwE,SAAWP,EAEbE,EAAK,GAAGhC,KAAKnC,GACd,IAIHmB,EAAGU,KAAKvC,SAAQ,CAACiC,EAAKjB,KACpByD,EAAIxC,EAAI+C,WAAU,GAClBN,EAAIzC,EAAI+C,WAAU,GAElBP,EAAEnB,UAAYoB,EAAEpB,UAAYtC,EAEJ,OAApBiB,EAAImD,kBAA4CC,IAApBpD,EAAImD,cAClCX,EAAEW,YAAcV,EAAEU,YAAcnD,EAAImD,aAItCpC,EAAQhD,SAAS8E,IACfF,EAAO3C,EAAIgC,MAAMa,GAAQE,WAAU,GACnCJ,EAAKrC,KAAON,EAAIgC,MAAMa,GAAQvC,KAC9BkC,EAAEjC,YAAYoC,GAET/C,EAAGsD,cAAcvB,SAASkB,KAC7BF,EAAO3C,EAAIgC,MAAMa,GAAQE,WAAU,GACnCJ,EAAKrC,KAAON,EAAIgC,MAAMa,GAAQvC,KAC9BmC,EAAElC,YAAYoC,GACf,IAGHC,EAAK,GAAGhC,KAAK4B,GACbI,EAAK,GAAGhC,KAAK6B,EAAb,IAGF7C,EAAGM,SAAW0C,EAAK,GACnBhD,EAAGyD,eAAiBT,EAAK,GAEzBhD,EAAGU,KAAOsC,EAAK,GACfhD,EAAG0D,WAAaV,EAAK,GAGrBhD,EAAGkB,QACJ,CAMDyC,KAAKxC,GACH,GAAIA,EAAQjC,OAAQ,CAClB,MAAMc,EAAKE,KAAKF,GAEhBmB,EAAQhD,SAAS8E,IACVjD,EAAGsD,cAAcvB,SAASkB,IAC7BjD,EAAGsD,cAActC,KAAKiC,EACvB,IAGH/C,KAAKkB,SACN,CACF,CAMDwC,KAAKzC,GACH,GAAIA,EAAQjC,OAAQ,CAClB,IAAIgD,EACJ,MAAMlC,EAAKE,KAAKF,GAEhBmB,EAAQhD,SAAQ8E,IACdf,EAAQlC,EAAGsD,cAAcO,QAAQZ,GAC7Bf,GAAS,GACXlC,EAAGsD,cAAc9B,OAAOU,EAAO,EAChC,IAGHhC,KAAKkB,SACN,CACF,CAMD0C,QAAQ3C,GACN,IAAIgB,EACJ,MAAMnC,EAAKE,KAAKF,GAahB,OAXAmB,EAAUA,GAAWnB,EAAGM,SAASC,KAAKwD,GAAMA,EAAGX,oBAE1CY,MAAM7C,GAEAL,MAAMC,QAAQI,KACvBgB,EAAO,GACPhB,EAAQhD,SAAQ8E,IACdd,EAAKnB,MAAMhB,EAAGsD,cAAcvB,SAASkB,GAArC,KAJFd,GAAQnC,EAAGsD,cAAcvB,SAASZ,GAQ7BgB,CACR,CAMDtB,IAAIH,GACF,IAAID,EACJ,MAAMsD,EAAKnG,SAASJ,cAAc,MAElC,IAAK0C,KAAKF,GAAGM,SAASpB,OAMpB,OALAgB,KAAKF,GAAGiE,OAAO,CACb3D,SAAU,CAACI,EAAKwD,SAChBxD,KAAMA,EAAKA,KAAKH,KAAKpB,GAAK,CAACA,YAE7Be,KAAKkB,UAIFlB,KAAKF,GAAGmE,aAOXJ,EAAGjG,UAAY,GANX4C,EAAKwD,QAAQzG,SACfsG,EAAGpD,YAAYD,EAAKwD,SAEpBH,EAAGjG,UAAY4C,EAAKwD,QAMxBhE,KAAKF,GAAGM,SAASU,KAAK+C,GAEtB7D,KAAKF,GAAGU,KAAKvC,SAAQ,CAACiC,EAAKjB,KACrBuB,EAAKA,KAAKvB,KACZsB,EAAK7C,SAASJ,cAAc,MAExBkD,EAAKA,KAAKvB,GAAG1B,SACfgD,EAAGE,YAAYD,EAAKA,KAAKvB,IAEzBsB,EAAG3C,UAAY4C,EAAKA,KAAKvB,GAG3BsB,EAAGC,KAAOD,EAAG3C,UAET4C,EAAKE,SACPH,EAAG3C,UAAY4C,EAAKE,OAAOrD,KAAK2C,KAAMO,EAAGC,KAAMD,EAAIL,IAGrDA,EAAIO,YAAYF,GACjB,IAGCC,EAAK0D,MACPL,EAAGhG,aAAa,YAAa2C,EAAK0D,MAEhC1D,EAAK2D,QACPN,EAAGhG,aAAa,cAAe2C,EAAK2D,QAGlC3D,EAAK4D,eAAe,cACtBP,EAAGV,SAAW3C,EAAK2C,SACnBU,EAAGhG,aACD,iBACkB,IAAlB2C,EAAK2C,SAAoB,OAAS,UAItCnD,KAAKkB,UAELlB,KAAKF,GAAGuE,cACT,CAODlD,OAAOC,GACDR,MAAMC,QAAQO,IAEhBA,EAAOC,MAAK,CAAC3C,EAAGC,IAAMA,EAAID,IAC1B0C,EAAOnD,SAAQ8E,GAAU/C,KAAKmB,OAAO4B,OAErC/C,KAAKF,GAAGM,SAASkB,OAAOF,EAAQ,GAEhCpB,KAAKF,GAAGU,KAAKvC,SAASiC,IACpBA,EAAIoE,YAAYpE,EAAIgC,MAAMd,GAA1B,KAIJpB,KAAKkB,SACN,CASDqD,OAAOxB,EAAQyB,EAAKC,EAAMC,GACxB,MAAM5E,EAAKE,KAAKF,GAUhB,GAPKA,EAAG6E,cACN7E,EAAG6E,YAAc,CACfC,aAAc9E,EAAGU,QAKhBV,EAAG6E,YAAY5B,GAAS,CAE3B,MAAM8B,EAAU,IAAIH,EAAO,KAAM,GAEjC5E,EAAG6E,YAAY5B,GAAW,WACxB,IAAI9D,EAAI,EACR,MAAO,IAAM4F,EAAQ5F,IAAM4F,EAAQ7F,OACpC,CAHyB,EAfG,CAsB/B,MAAM8F,EAAYhF,EAAG6E,YAAY5B,KAC3BgC,EAAenE,MAAMoE,KAAKlF,EAAG6E,YAAYC,cAAcL,QAC3DpE,IACE,MAAM0C,EAAO1C,EAAG+B,MAAMa,GAChBkC,EAAUpC,EAAKqC,aAAa,gBAChCrC,EAAKG,aAAa,gBAClBH,EAAKjB,UAGP,MAA4B,mBAAdkD,EACZA,EAAUG,GACVA,IAAYH,CAFd,IAMJhF,EAAGU,KAAOuE,EAELjF,EAAGU,KAAKxB,QAKXgB,KAAKkB,UACLpB,EAAGkB,WALHlB,EAAGqF,QACHrF,EAAGiB,SAAU,EACbjB,EAAGsF,WAAWtF,EAAGuF,QAAQC,OAAO9I,SAM7BiI,GACH3E,EAAGyF,KAAK,iBAAkBxC,EAAQyB,EAErC,CAQDnD,KAAK0B,EAAQyB,EAAKC,GAChB,MAAM3E,EAAKE,KAAKF,GAGhB,GAAIA,EAAG0F,cAAgBzC,EAAS,GAAKA,EAASjD,EAAGM,SAASpB,QACxD,OAAO,EAIT,MAAMyG,EACJ3F,EAAGuF,QAAQR,SAAW/E,EAAGuF,QAAQR,QAAQ/E,EAAGM,SAAS2C,GAAQ2C,aAC/D,GAAID,GAAsC,IAAvBA,EAAYzG,OAE7B,YADAgB,KAAKuE,OAAOxB,EAAQyB,EAAKC,EAAMgB,GAIjC3F,EAAG6F,SAAU,EAERlB,GACH3E,EAAGyF,KAAK,oBAAqBxC,EAAQyB,GAGvC,IAAIzE,EAAOD,EAAGU,KACd,MAAMoF,EAAQ,GACRvG,EAAU,GAChB,IAAIX,EAAI,EACJmH,EAAI,EACR,MAAMhC,EAAK/D,EAAGM,SAAS2C,GAEjB+C,EAAU,GAGhB,GAAqC,SAAjCjC,EAAGb,aAAa,aAAyB,CAC3C,IAAImB,GAAS,EACKN,EAAGqB,aAAa,iBAGhCf,EAASN,EAAGb,aAAa,gBAE3B8C,EAAQhF,KACNiF,OAAO,sBAAUC,MACf,EAAGC,eAAgBC,GAAQD,EAAUC,EAAM/B,KAGhD,CAEDgC,QAAQC,IAAIN,GAASE,MAAKK,IACxB,MAAMC,EAAgBD,EAAkB,GAqCxC,IAAIE,EACAC,EArCJ5F,MAAMoE,KAAKjF,GAAM9B,SAAQkC,IACvB,MAAM0C,EAAO1C,EAAG+B,MAAMa,GAChBkC,EAAUpC,EAAKqC,aAAa,gBAChCrC,EAAKG,aAAa,gBAClBH,EAAKjB,UACP,IAAI6E,EAEFA,EADEH,EACIA,EAAcrB,GACQ,iBAAZA,EACVA,EAAQyB,QAAQ,eAAgB,IAEhCzB,EAGJ0B,WAAWF,IAAQA,EACrBpH,EAAQwG,KAAO,CACb1G,MAAOyH,OAAOH,GACdvG,IAAKC,GAGPyF,EAAMlH,KAAO,CACXS,MACqB,iBAAZ8F,EAAuBA,EAAQtF,cAAgBsF,EACxD/E,IAAKC,EAER,IAIEqE,IAEDA,EADEX,EAAGgD,UAAUC,SAAS,OAClB,OAEA,OAKC,QAAPtC,GACF+B,EAAM9H,EAAUmH,GAAQ,GACxBY,EAAM/H,EAAUY,GAAU,GAC1BwE,EAAGgD,UAAU1F,OAAO,OACpB0C,EAAGgD,UAAUlG,IAAI,UAEjB4F,EAAM9H,EAAUY,EAAS,GACzBmH,EAAM/H,EAAUmH,EAAO,GACvB/B,EAAGgD,UAAU1F,OAAO,QACpB0C,EAAGgD,UAAUlG,IAAI,QAIfb,EAAGiH,QAAUlD,GAAM/D,EAAGiH,SACxBjH,EAAGiH,OAAOF,UAAU1F,OAAO,QAC3BrB,EAAGiH,OAAOF,UAAU1F,OAAO,QAG7BrB,EAAGiH,OAASlD,EAGZ9D,EAAOwG,EAAIS,OAAOR,GAElB1G,EAAGU,KAAO,GACV,MAAMyG,EAAU,GAEhBlH,EAAK9B,SAAQ,CAACiJ,EAAGjI,KACfa,EAAGU,KAAKM,KAAKoG,EAAEhH,KAEW,OAAtBgH,EAAEhH,IAAImD,kBAA8CC,IAAtB4D,EAAEhH,IAAImD,aACtC4D,EAAQnG,KAAK7B,EACd,IAGHa,EAAGqH,WAAaF,EAEhBjH,KAAKkB,UAELpB,EAAGkB,SAEEyD,GACH3E,EAAGyF,KAAK,iBAAkBxC,EAAQyB,EACnC,GAEJ,CAMDtD,UACE,IAAIxC,EACAC,EACA+D,EACAC,EACJ,MAAM7C,EAAKE,KAAKF,GACVgD,EAAO,GAEbhD,EAAG0D,WAAa,GAChB1D,EAAGyD,eAAiB,GAEpBzD,EAAGM,SAASnC,SAAQ,CAAC4F,EAAI5E,KACvB4E,EAAGX,kBAAoBjE,EACvB4E,EAAGV,SAAgD,UAArCU,EAAGb,aAAa,iBACzBlD,EAAGsD,cAAcvB,SAAS5C,IAC7Ba,EAAGyD,eAAezC,KAAK+C,EACxB,IAIH/D,EAAGU,KAAKvC,SAAQ,CAACiC,EAAKjB,KACpBP,EAAIwB,EAAI+C,WAAU,GAClBtE,EAAIuB,EAAI+C,WAAU,GAElBvE,EAAE6C,UAAY5C,EAAE4C,UAAYtC,EAEJ,OAApBiB,EAAImD,kBAA4CC,IAApBpD,EAAImD,cAClC3E,EAAE2E,YAAc1E,EAAE0E,YAAcnD,EAAImD,aAItCzC,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAQ4E,IAC5BH,EAAIG,EAAKI,WAAU,GACnBP,EAAElC,KAAOqC,EAAKrC,KACd9B,EAAE+B,YAAYiC,GAET5C,EAAGsD,cAAcvB,SAASa,EAAE0E,aAC/BzE,EAAID,EAAEO,WAAU,GAChBN,EAAEnC,KAAOkC,EAAElC,KACX7B,EAAE8B,YAAYkC,GACf,IAIHG,EAAKhC,KAAKpC,GACVoB,EAAG0D,WAAW1C,KAAKnC,EAAnB,IAGFmB,EAAGU,KAAOsC,EAEVhD,EAAGkB,QACJ,EC5fI,MAAMqG,EAAc,SAAU7G,GACjC,IAAI8G,GAAQ,EACRC,GAAQ,EAMZ,GAJA/G,EAAOA,GAAQR,KAAKqF,QAAQ7E,KAE5BR,KAAKvC,IAAIoJ,UAAUlG,OAAOX,KAAKqF,QAAQmC,QAAQC,OAE3CjH,EAAKJ,SAAU,CACjBkH,EAAQhK,EAAc,SACtB,MAAM6C,EAAK7C,EAAc,MACzBkD,EAAKJ,SAASnC,SAAQ,CAACyJ,EAAKC,KAC1B,MAAMpH,EAAKjD,EAAc,KAAM,CAC7BkB,KAAMkJ,IAEJ1H,KAAKqF,QAAQuC,YAAqB,GAAPD,GAC7BpH,EAAGsG,UAAUlG,IAAI,2BAEnBR,EAAGM,YAAYF,EAAf,IAGF+G,EAAM7G,YAAYN,EACnB,CAEGK,EAAKA,MAAQA,EAAKA,KAAKxB,SACzBuI,EAAQjK,EAAc,SACtBkD,EAAKA,KAAKvC,SAAS8B,IACjB,GAAIS,EAAKJ,UACHI,EAAKJ,SAASpB,SAAWe,EAAKf,OAChC,MAAM,IAAI6I,MACR,0DAIN,MAAM1H,EAAK7C,EAAc,MACzByC,EAAK9B,SAASkB,IACZ,MAAMoB,EAAKjD,EAAc,KAAM,CAC7BkB,KAAMW,IAERgB,EAAGM,YAAYF,EAAf,IAEFgH,EAAM9G,YAAYN,EAAlB,KAIAmH,IACuB,OAAnBtH,KAAKvC,IAAIqK,OACT9H,KAAKvC,IAAI6G,YAAYtE,KAAKvC,IAAIqK,OAElC9H,KAAKvC,IAAIgD,YAAY6G,IAGrBC,IACIvH,KAAKvC,IAAIsK,QAAQ/I,QACjBgB,KAAKvC,IAAI6G,YAAYtE,KAAKvC,IAAIsK,QAAQ,IAE1C/H,KAAKvC,IAAIgD,YAAY8G,GAE5B,ECtDYS,EAAgB,CAC3B7E,UAAU,EACV8E,YAAY,EAGZC,QAAQ,EACR3L,QAAS,GACT4L,cAAe,CAAC,EAAG,GAAI,GAAI,GAAI,IAC/BC,UAAU,EACVC,WAAW,EACXC,SAAU,WACVC,SAAU,WACVC,UAAW,UACXC,SAAU,UACVC,aAAc,WACdC,QAAS,IACTC,SAAU,IACVC,eAAe,EACfC,WAAY,EAEZC,QAAS,GAETC,cAAc,EACdC,aAAa,EAEbC,QAAQ,EACRjF,cAAc,EACdkF,QAAQ,EAERtK,MAAM,EAGNuK,OAAQ,CACN7C,IAAK,mBACL8C,OAAQ,iBAGV/D,OAvCa7F,IAyCb+H,QAAS,CACPC,MAAO,CAAC,qBACRyB,OAAQ,GACRI,MAAO,GACPC,SAAU,GACVC,SAAU,KCvCP,MAAMC,EACX5J,YAAY4H,EAAOpC,EAAU,IAC3B,MAAM5H,EACa,iBAAVgK,EAAqB/J,SAASgM,cAAcjC,GAASA,EAE9D,IAAInC,EAwBJ,GAtBEA,EADED,EAAQxG,KACDY,EAAW4F,EAAQxG,MAEnBmJ,EAAc1C,OAIzBtF,KAAKqF,QAAU,IACV2C,KACA3C,EACH+D,OAAQ,IACHpB,EAAcoB,UACd/D,EAAQ+D,QAEb9D,OAAQ,IACHA,KACAD,EAAQC,QAEbkC,QAAS,IACJQ,EAAcR,UAIjBnC,EAAQmC,QACV,IAAK,MAAOmC,EAAKxK,KAAUjC,OAAO0M,QAAQ5J,KAAKqF,QAAQmC,SACrDxH,KAAKqF,QAAQmC,QAAQmC,GAAOxK,EAAM6H,OAAO3B,EAAQmC,QAAQmC,IAuB7D,GAnBA3J,KAAK6J,aAAc,EAEnB7J,KAAK8J,cAAgBrM,EAAIG,UACzBoC,KAAK+J,gBAAkB/J,KAAKqF,QAAQlC,SAG/BnD,KAAKqF,QAAQ6D,SAChBlJ,KAAKqF,QAAQlC,UAAW,GAGR,OAAd1F,EAAIqK,SAEH9H,KAAKqF,QAAQ7E,MACbR,KAAKqF,QAAQ7E,OAASR,KAAKqF,QAAQ7E,KAAKJ,YAEzCJ,KAAKqF,QAAQlC,UAAW,GAIxB1F,EAAIsK,QAAQ/I,SAAWvB,EAAIsK,QAAQ,GAAGhI,KAAKf,QACzCgB,KAAKqF,QAAQ7E,OACVR,KAAKqF,QAAQ7E,KAAKA,KACrB,MAAM,IAAIqH,MACR,0EAMR7H,KAAKvC,IAAMA,EAEXuC,KAAKyH,MAAQzH,KAAKvC,IAElBuC,KAAKgK,UAAY,CACfC,SAAWC,GAAUlK,KAAKiK,SAASC,IAGrClK,KAAKyE,MACN,CAQY0F,cAACC,EAAMnN,GACC,mBAARA,EACTwM,EAAYtM,UAAUiN,GAAQnN,EAE9BwM,EAAYW,GAAQnN,CAEvB,CAEDoN,cACE,IAAIC,EAAU,EACd,MAAMC,EAAa7M,SAAS8M,kBAAkB,sBAC9C,IAAK,IAAIvL,EAAI,EAAGA,EAAIsL,EAAWvL,OAAQC,IACjCsL,EAAWtL,GAAGqL,SAChBA,IAIJ,OAAOA,CACR,CAEDG,kBACE,MAAMH,EAAU,GACVC,EAAa7M,SAAS8M,kBAAkB,sBAC9C,IAAK,IAAIvL,EAAI,EAAGA,EAAIsL,EAAWvL,OAAQC,IACjCsL,EAAWtL,GAAGqL,SAChBA,EAAQxJ,KAAKyJ,EAAWtL,GAAGyL,QAAQ,MAAMnJ,WAI7C,OAAO+I,CACR,CAOD7F,KAAKY,GACH,GAAIrF,KAAK6J,aAAe7J,KAAKvC,IAAIoJ,UAAUC,SAAS,qBAClD,OAAO,EAGT,GAAIzB,EAAS,CACX,IAAIC,EAwBJ,GAtBEA,EADED,EAAQxG,KACDY,EAAW4F,EAAQxG,MAEnBY,IAIX4F,EAAU,IACLrF,KAAKqF,WACLA,EACH+D,OAAQ,IACHpJ,KAAKqF,QAAQ+D,UACb/D,EAAQ+D,QAEb9D,OAAQ,IACHA,KACAD,EAAQC,QAEbkC,QAAS,IACJQ,EAAcR,UAIjBnC,EAAQmC,QACV,IAAK,MAAOmC,EAAKxK,KAAUjC,OAAO0M,QAAQvE,EAAQmC,SAChDnC,EAAQmC,QAAQmC,GAAOxK,EAAM6H,OAAOhH,KAAKqF,QAAQmC,QAAQmC,GAG9D,CAEDzM,OAAOyN,OAAO3K,KAAKqF,QAASA,GAAW,CAAvC,GAEArF,KAAK4K,YAAc,EACnB5K,KAAK6K,aAAc,EAEnB7K,KAAKoD,cAAgB,GACrBpD,KAAK8K,gBAAkB,GACvB9K,KAAK+K,gBAAkB,GAEvB/K,KAAKU,SAELsK,YAAW,KACThL,KAAKuF,KAAK,kBACVvF,KAAK6J,aAAc,EAEf7J,KAAKqF,QAAQ4F,SACf/N,OAAO0M,QAAQ5J,KAAKqF,QAAQ4F,SAAShN,SAAQ,EAAEiN,EAAQ7F,MACjDrF,KAAKkL,IAAmC,mBAAjBlL,KAAKkL,KAC9BlL,KAAKkL,GAAUlL,KAAKkL,GAAQ7F,EAAS,CAAE/H,kBAIrC+H,EAAQ8F,SACRnL,KAAKkL,GAAQzG,MACgB,mBAAtBzE,KAAKkL,GAAQzG,MAEpBzE,KAAKkL,GAAQzG,OAEhB,GAEJ,GACA,GACJ,CAOD/D,OAAOwD,GACL,GAAIA,EAAM,CACR,OAAQA,GACN,IAAK,OACHlE,KAAKoL,aACL,MACF,IAAK,QACHpL,KAAKqL,cACL,MACF,IAAK,SACHrL,KAAKqE,eAIT,OAAO,CACR,CAEDrE,KAAKsL,YACN,CAODA,aACE,MAAMjG,EAAUrF,KAAKqF,QACrB,IAAIkG,EAAW,GAGf,GAAIlG,EAAQ7E,KAAM,CAChB,GAAI6E,EAAQuC,aACNvC,EAAQ7E,KAAKJ,UAAYiF,EAAQ7E,KAAKJ,SAASpB,OAAS,IAC1DqG,EAAQ7E,KAAKJ,SAAWJ,KAAKwL,cAAcnG,EAAQ7E,KAAKJ,WAGtDiF,EAAQ7E,KAAKA,KAAKxB,OAAS,GACzBqG,EAAQ7E,KAAKA,MAAQI,MAAMC,QAAQwE,EAAQ7E,KAAKA,OAClD,IAAK,IAAIvB,EAAI,EAAGA,EAAIoG,EAAQ7E,KAAKA,KAAKxB,OAAQC,IAC5CoG,EAAQ7E,KAAKA,KAAKvB,GAAKe,KAAKyL,WAAWpG,EAAQ7E,KAAKA,KAAKvB,IAKjEoI,EAAYhK,KAAK2C,KAClB,MACC,GAAIqF,EAAQuC,WAAY,CAEtB,MAAM/D,EAAKnG,SAASJ,cAAc,MAClCuG,EAAGgD,UAAUlG,IAAI,2BACjBkD,EAAGpD,YAAYT,KAAK0L,cAAa,IACjC1L,KAAKvC,IAAIqK,MAAM/H,KACZ4L,KAAK,GACLC,aAAa/H,EAAI7D,KAAKvC,IAAIqK,MAAM/H,KAAK4L,KAAK,GAAGE,YAGhD,MAAM9L,EAAOC,KAAKvC,IAAIsK,QAAQ,GAAG+D,iBAAiB,MAClD,GAAI/L,EAAKf,OAAS,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIc,EAAKf,OAAQC,IAAK,CACpC,MAAMsB,EAAK7C,SAASJ,cAAc,MAClCiD,EAAGE,YAAYT,KAAK0L,gBACpB1L,KAAKvC,IAAIsK,QAAQ,GAAGhI,KAAK4L,KAAK1M,GAAG8M,WAAW,GAAGtL,YAAYF,EAC5D,CAEJ,CAiBH,GAbAP,KAAKgM,KAAOhM,KAAKvC,IAAIsK,QAAQ,GAC7B/H,KAAKiM,KAAOjM,KAAKvC,IAAIqK,MACrB9H,KAAKkM,KAAOlM,KAAKvC,IAAI0O,MAEhBnM,KAAKgM,OACRhM,KAAKgM,KAAO1O,EAAc,SAE1B0C,KAAKvC,IAAIgD,YAAYT,KAAKgM,OAG5BhM,KAAKe,QAAUf,KAAKgM,KAAKjM,KAAKf,OAAS,GAGlCgB,KAAKiM,KAAM,CACd,MAAM3L,EAAIhD,EAAc,SAClB8O,EAAI9O,EAAc,MAEpB0C,KAAKe,UACPH,MAAMoE,KAAKhF,KAAKgM,KAAKjM,KAAK,GAAGmC,OAAOjE,SAAQ,KAC1CmO,EAAE3L,YAAYnD,EAAc,MAA5B,IAGFgD,EAAEG,YAAY2L,IAGhBpM,KAAKiM,KAAO3L,EAEZN,KAAKvC,IAAImO,aAAa5L,KAAKiM,KAAMjM,KAAKgM,MAEtChM,KAAKiE,aAAeoB,EAAQpB,YAC7B,CAwDD,GAtDAjE,KAAKI,SAAW,GAChBJ,KAAKwF,YAAcxF,KAAKiM,KAAKlM,KAAKf,OAAS,EAEvCgB,KAAKwF,cACPxF,KAAKkJ,OAASlJ,KAAKiM,KAAKlM,KAAK,GAC7BC,KAAKI,SAAW,GAAGiM,MAAMhP,KAAK2C,KAAKkJ,OAAOhH,QAIvCmD,EAAQ6D,QACPlJ,KAAKiM,MACPjM,KAAKvC,IAAI6G,YAAYtE,KAAKvC,IAAIqK,OAK9BzC,EAAQ8D,OACNnJ,KAAKiM,OAASjM,KAAKkM,OACrBlM,KAAKkM,KAAO5O,EAAc,QAAS,CACjCkB,KAAMwB,KAAKiM,KAAKrO,YAElBoC,KAAKvC,IAAIgD,YAAYT,KAAKkM,OAGxBlM,KAAKkM,MACPlM,KAAKvC,IAAI6G,YAAYtE,KAAKvC,IAAI0O,OAKlCnM,KAAKsM,QAAUhP,EAAc,MAAO,CAClCiB,MAAO,4CAITgN,GAAY,gCACZA,GAAYlG,EAAQ+D,OAAO7C,IAC3BgF,GAAY,SACRlG,EAAQ0D,QAAQ/J,OAClBuM,GAAa,qDAAoDlG,EAAQ0D,qCAEzEwC,GAAY,4CAEdA,GAAY,mCACZA,GAAYlG,EAAQ+D,OAAOC,OAC3BkC,GAAY,SAGZA,EAAWA,EAAS7E,QAClB,SACArB,EAAQ6C,OAAS,uCAAyC,IAIxD7C,EAAQ6C,QAAU7C,EAAQ8C,cAAe,CAC3C,IAAIoE,EAAO,4CACXA,GAAQlH,EAAQC,OAAO/I,QACvBgQ,GAAQ,iBAGR,MAAMnL,EAAS9D,EAAc,SAAU,CACrCiB,MAAO,yBAGT6C,EAAOyF,UAAUlG,OAAO0E,EAAQmC,QAAQ+B,UAGxClE,EAAQ8C,cAAclK,SAAShB,IAC7B,MAAMuP,EAAWvP,IAAQoI,EAAQ9I,QAC3BkQ,EAAS,IAAIC,OAAOzP,EAAKA,EAAKuP,EAAUA,GAC9CpL,EAAOT,IAAI8L,EAAX,IAIFF,EAAOA,EAAK7F,QAAQ,WAAYtF,EAAOuL,WAGvCpB,EAAWA,EAAS7E,QAAQ,WAAY6F,EACzC,MACChB,EAAWA,EAAS7E,QAAQ,WAAY,IAI1C,GAAIrB,EAAQ4C,WAAY,CACtB,MAAM2E,EAAQ,iFAAgFvH,EAAQC,OAAOhJ,kCAG7GiP,EAAWA,EAAS7E,QAAQ,WAAYkG,EACzC,MACCrB,EAAWA,EAAS7E,QAAQ,WAAY,IAGtC1G,KAAKwF,aAEPxF,KAAKU,OAAO,UAIdV,KAAKvC,IAAIoJ,UAAUlG,OAAOX,KAAKqF,QAAQmC,QAAQC,OAC3CpC,EAAQ6D,QACVlJ,KAAKvC,IAAIqK,MAAMjB,UAAUlG,OAAOX,KAAKqF,QAAQmC,QAAQ0B,QAIvD,MAAM2D,EAAmBvP,EAAc,MAAO,CAC5CiB,MAAO,2BAEHuO,EAAYxP,EAAc,KAAM,CACpCiB,MAAO,gCAETsO,EAAiBpM,YAAYqM,GAG7BvB,EAAWA,EAAS7E,QAAQ,aAAcmG,EAAiBF,WAC3D3M,KAAKsM,QAAQ1O,UAAY2N,EAEzBvL,KAAK+M,UAAY/M,KAAKsM,QAAQ5C,cAAc,0BAE5C1J,KAAKgN,OAAShN,KAAKsM,QAAQR,iBAAiB,gCAE5C9L,KAAKiN,MAAQjN,KAAKsM,QAAQ5C,cAAc,qBAGxC1J,KAAKvC,IAAIyP,WAAWC,aAAanN,KAAKsM,QAAStM,KAAKvC,KACpDuC,KAAK+M,UAAUtM,YAAYT,KAAKvC,KAGhCuC,KAAKoN,KAAOpN,KAAKvC,IAAI4P,wBAGrBrN,KAAKQ,KAAOI,MAAMoE,KAAKhF,KAAKgM,KAAKjM,MACjCC,KAAKwD,WAAaxD,KAAKQ,KAAK6L,QAC5BrM,KAAKuD,eAAiBvD,KAAKI,SAASiM,QAGpCrM,KAAKgB,SAELhB,KAAKsN,aAGLtN,KAAKuN,YAGLvN,KAAKwN,aAGAnI,EAAQ6D,QACXlJ,KAAKsM,QAAQzF,UAAUlG,IAAI,aAGxB0E,EAAQ8D,QACXnJ,KAAKsM,QAAQzF,UAAUlG,IAAI,aAGzB0E,EAAQlC,UACVnD,KAAKsM,QAAQzF,UAAUlG,IAAI,YAGzB0E,EAAQ4C,YACVjI,KAAKsM,QAAQzF,UAAUlG,IAAI,cAGzB0E,EAAQ4D,aACVjJ,KAAKsM,QAAQzF,UAAUlG,IAAI,gBAGzB0E,EAAQ2D,cACVhJ,KAAKsM,QAAQzF,UAAUlG,IAAI,iBAGfX,KAAKsM,QAAQ5C,cAAc,sBACnC7C,UAAUlG,OAAO0E,EAAQmC,QAAQ8B,OAEvCtJ,KAAKyN,YACN,CAEDC,UACE,MAAMrI,EAAUrF,KAAKqF,QACrB,YAAiC/B,WAAtB+B,EAAQ7E,KAAKA,KACf6E,EAAQ7E,KAAKA,KAEf,EACR,CAEDmN,aAEE,OADgB3N,KAAKqF,OAEtB,CAMD+F,aAOE,GANIpL,KAAKwF,cACP1H,EAAMkC,KAAKkJ,QAEXlJ,KAAKuD,eAAetF,SAAS4F,GAAO7D,KAAKkJ,OAAOzI,YAAYoD,MAG1D7D,KAAKe,SAAWf,KAAK4N,WAAY,CAC/B5N,KAAK4K,YAAc5K,KAAK4N,aAC1B5N,KAAK4K,YAAc,GAIrB,MAAM5I,EAAQhC,KAAK4K,YAAc,EAE3BiD,EAAOnQ,SAASoQ,yBACtB9N,KAAK+N,MAAM/L,GAAO/D,SAASiC,GACzB2N,EAAKpN,YAAYT,KAAKD,OAAOW,OAAOR,MAGtCF,KAAKmF,MAAM0I,GAEX7N,KAAK6K,YAAmC,IAArB7K,KAAK4K,YACxB5K,KAAKgO,WAAahO,KAAK4K,cAAgB5K,KAAKiO,QAC7C,MACCjO,KAAKoF,WAAWpF,KAAKqF,QAAQC,OAAO9I,QAItC,IAII0R,EAJAC,EAAU,EAEVC,EAAI,EACJhC,EAAI,EAWR,GARIpM,KAAK4N,aACPO,EAAUnO,KAAK4K,YAAc,EAC7BwD,EAAID,EAAUnO,KAAKqF,QAAQ9I,QAC3B6P,EAAIgC,EAAIpO,KAAK+N,MAAMI,GAASnP,OAC5BoP,GAAQ,EACRF,EAAQlO,KAAKqO,UAAYrO,KAAKmH,WAAWnI,OAASgB,KAAKQ,KAAKxB,QAG1DgB,KAAKiN,OAASjN,KAAKqF,QAAQC,OAAO5I,KAAKsC,OAAQ,CAEjD,MAAMsP,EAAStO,KAAKqF,QAAQC,OAAO5I,KAChCgK,QAAQ,UAAW0H,GACnB1H,QAAQ,QAAS0F,GACjB1F,QAAQ,SAAU1G,KAAK4K,aACvBlE,QAAQ,UAAW1G,KAAK4N,YACxBlH,QAAQ,SAAUwH,GAErBlO,KAAKiN,MAAMrP,UAAYsQ,EAAQI,EAAS,EACzC,CAEuB,GAApBtO,KAAK4K,aACP5K,KAAKuN,YAGPvN,KAAKuO,oBACN,CAMDlD,cAGE,GAFAvN,EAAMkC,KAAKgN,QAEPhN,KAAK4N,WAAa,EAAG,CACvB,MAAMlL,EAAI,QACJmL,EAAOnQ,SAASoQ,yBAChBU,EAAOxO,KAAK6K,YAAc,EAAI7K,KAAK4K,YAAc,EACjD6D,EAAOzO,KAAKgO,WAAahO,KAAK4N,WAAa5N,KAAK4K,YAAc,EAGhE5K,KAAKqF,QAAQgD,WACfwF,EAAKpN,YAAYtC,EAAOuE,EAAG,EAAG1C,KAAKqF,QAAQmD,YAIzCxI,KAAKqF,QAAQ+C,WAAapI,KAAK6K,aACjCgD,EAAKpN,YAAYtC,EAAOuE,EAAG8L,EAAMxO,KAAKqF,QAAQiD,WAGhD,IAAIoG,EAAQ1O,KAAK2O,MAGb3O,KAAKqF,QAAQwD,gBACf6F,EL3egB,EAAChQ,EAAGC,EAAG+D,EAAGC,EAAGiM,KAEjC,IAAI1P,EACJ,MAAMhB,EAAI,GAFVyE,EAAIA,GAAK,GAGT,IAAIyL,EAAIzP,EAAIgE,EACRkM,EAAIlQ,EAAIgE,EACZ,MAAMrC,EAAI,GACJrB,EAAI,GACNN,EAAI,EAAIgE,EAAIzE,EACZ2Q,EAAI,EAAI3Q,EACDS,EAAI+D,GAAK,EAAIC,EAAIzE,KACxBkQ,EAAI1L,GAAK,EAAIxE,IAEjB,IAAK,IAAI4Q,EAAI,EAAGA,GAAKpM,EAAGoM,IACpB,GAAI,GAAKA,GAAKA,GAAKpM,GAAMoM,GAAKV,GAAKU,GAAKD,EAAI,CACxC,MAAME,EAAIrQ,EAAEoQ,EAAI,GAChBC,EAAElI,UAAU1F,OAAO,UACnBb,EAAEQ,KAAKiO,EACV,CAmBL,OAjBAzO,EAAErC,SAAQyE,IACN,MAAMC,EAAID,EAAEf,SAAS,GAAGqB,aAAa,aACrC,GAAI9D,EAAG,CACH,MAAMhB,EAAIgB,EAAEyC,SAAS,GAAGqB,aAAa,aACrC,GAAIL,EAAIzE,GAAK,EAAGe,EAAE6B,KAAKpC,EAAER,SACpB,GAAIyE,EAAIzE,GAAK,EAAG,CACjB,MAAMkQ,EAAI9Q,EAAc,KAAM,CAC1BiB,MAAO,WACPC,KAAO,eAAcoQ,UAEzB3P,EAAE6B,KAAKsN,EACV,CACJ,CACDnP,EAAE6B,KAAK4B,GACPxD,EAAIwD,CAAJ,IAGGzD,CAAP,EKscY+P,CACNhP,KAAK2O,MACL3O,KAAK4K,YACL5K,KAAK+N,MAAM/O,OACXgB,KAAKqF,QAAQyD,WACb9I,KAAKqF,QAAQqD,eAKjB1I,KAAK2O,MAAM3O,KAAK4K,YAAc,GAAG/D,UAAUlG,IAAI,UAG/C+N,EAAMzQ,SAASgR,IACbA,EAAEpI,UAAU1F,OAAO,UACnB0M,EAAKpN,YAAYwO,EAAjB,IAGFjP,KAAK2O,MAAM3O,KAAK4K,YAAc,GAAG/D,UAAUlG,IAAI,UAG3CX,KAAKqF,QAAQ+C,WAAapI,KAAKgO,YACjCH,EAAKpN,YAAYtC,EAAOuE,EAAG+L,EAAMzO,KAAKqF,QAAQkD,WAI5CvI,KAAKqF,QAAQgD,WACfwF,EAAKpN,YAAYtC,EAAOuE,EAAG1C,KAAK4N,WAAY5N,KAAKqF,QAAQoD,WAI3DzI,KAAKgN,OAAO/O,SAASyQ,IACnBA,EAAMjO,YAAYoN,EAAK5K,WAAU,GAAjC,GAEH,CACF,CAMDoB,eACErE,KAAKsF,OAAS,GAEVtF,KAAKI,UAAYJ,KAAKI,SAASpB,QACjCgB,KAAKI,SAASnC,SAAQ,CAAC4F,EAAI5E,KAazB,GAZAe,KAAKsF,OAAOrG,GAAK4E,EAAG6B,YAGlB7B,EAAGqL,mBACHrL,EAAGqL,kBAAkBrI,UAAUC,SAAS,wBAExCjD,EAAGjG,UAAYiG,EAAGqL,kBAAkBtR,WAGtCiG,EAAGV,SAAgD,UAArCU,EAAGb,aAAa,iBAE9Ba,EAAGX,kBAAoBjE,EACnBe,KAAKqF,QAAQlC,UAAYU,EAAGV,SAAU,CACxC,MAAMgM,EAAO7R,EAAc,IAAK,CAC9B8R,KAAM,IACN7Q,MAAO,qBACPC,KAAMqF,EAAGjG,YAGXiG,EAAGjG,UAAY,GACfiG,EAAGhG,aAAa,gBAAiB,IACjCgG,EAAGpD,YAAY0O,EAChB,KAILnP,KAAKwN,YACN,CAMDC,aACE,MAAMpI,EAAUrF,KAAKqF,QAErB,GAAIA,EAAQ8C,cAAe,CACzB,MAAMoB,EAAWvJ,KAAKsM,QAAQ5C,cAAc,yBACxCH,GAEFA,EAAS8F,iBACP,UACA,KACEhK,EAAQ9I,QAAU+S,SAAS/F,EAASpK,MAAO,IAC3Ca,KAAKgB,SAELhB,KAAKuN,YAELvN,KAAKuF,KAAK,oBAAqBF,EAAQ9I,QAAvC,IAEF,EAjBK,CAuEX,GAhDI8I,EAAQ4C,aACVjI,KAAKsJ,MAAQtJ,KAAKsM,QAAQ5C,cAAc,sBACpC1J,KAAKsJ,OACPtJ,KAAKsJ,MAAM+F,iBACT,SACA,IAAMrP,KAAKuP,OAAOvP,KAAKsJ,MAAMnK,SAC7B,IAMNa,KAAKsM,QAAQ+C,iBACX,SACCnR,IACC,MAAMkO,EAAIlO,EAAEsR,OAAO9E,QAAQ,KAC3B,GAAI0B,GAAkC,MAA7BA,EAAE7O,SAASoC,cAClB,GAAIyM,EAAElH,aAAa,aAAc,CAC/B,GAAIG,EAAQuC,WAAY,CACtB,MAAM2C,EAAa7M,SAAS8M,kBAC1B,sBAEIiF,EAAYzP,KAAKsM,QAAQ5C,cAC7B,2BAGF,IAAK,IAAIzK,EAAI,EAAGA,EAAIsL,EAAWvL,OAAQC,IACrCsL,EAAWtL,GAAGqL,SAAU,EAE1BmF,EAAUnF,SAAU,CAErB,CACDtK,KAAK3B,KAAK+N,EAAEpJ,aAAa,cACzB9E,EAAEwR,gBAhBJ,MAkBErK,EAAQlC,UACRiJ,EAAEvF,UAAUC,SAAS,uBACyB,SAA9CsF,EAAEc,WAAWlK,aAAa,mBAE1BhD,KAAKiB,UAAUI,KAAKrB,KAAKI,SAASuD,QAAQyI,EAAEc,aAC5ChP,EAAEwR,iBAEL,IAEH,GAIErK,EAAQuC,WAAY,CAEtB,MAAM6H,EAAYzP,KAAKsM,QAAQ5C,cAAc,2BAC7C+F,EAAUJ,iBACR,SACAnR,IACE,GAAIA,EAAEyR,UAAW,CACf,MAAMpF,EAAa7M,SAAS8M,kBAAkB,sBAE9C,IAAK,IAAIvL,EAAI,EAAGA,EAAIsL,EAAWvL,OAAQC,IACrCsL,EAAWtL,GAAGqL,QAAUmF,EAAUnF,QAGpC,MAAMsF,EAAU,CACdC,aAAc7P,KAAK8P,iBACnBC,UAAWxF,EAAWvL,QAGxBgB,KAAKuF,KAAK,mBAAoBqK,EAC/B,KAEH,EAEH,CAEDI,OAAOX,iBAAiB,SAAUrP,KAAKgK,UAAUC,SAClD,CAED6F,iBACE,IAAIxF,EAAU,EACd,MAAMC,EAAa7M,SAAS8M,kBAAkB,sBAC9C,IAAK,IAAIvL,EAAI,EAAGA,EAAIsL,EAAWvL,OAAQC,IACjCsL,EAAWtL,GAAGqL,SAChBA,IAGJ,OAAOA,CACR,CAKDL,WACEjK,KAAKoN,KAAOpN,KAAK+M,UAAUM,wBACtBrN,KAAKoN,KAAK6C,OAIfjQ,KAAKwN,YACN,CAMDF,WAAW4C,GAST,GARKA,GACHlQ,KAAKQ,KAAKvC,SAASiC,IACjBU,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAS4E,IAC7BA,EAAKrC,KAAOqC,EAAKjF,SAAjB,GADF,IAMAoC,KAAKqF,QAAQuC,aAAe5H,KAAK6J,YAAa,CAChD,GACE7J,KAAKqF,QAAQjB,eAAe,YAC5BpE,KAAKqF,QAAQpE,QAAQjC,OAAS,EAE9B,IAAK,IAAIC,EAAI,EAAGA,EAAIe,KAAKqF,QAAQpE,QAAQjC,OAAQC,IAC/Ce,KAAKqF,QAAQpE,QAAQhC,GAAGmC,OAASpB,KAAKqF,QAAQpE,QAAQhC,GAAGmC,OAAS,OAGpEpB,KAAKqF,QAAQpE,QAAU,GAIzBjB,KAAKqF,QAAQpE,QAAQkP,QAAQ,CAC3B/O,OAAQ,EACR+B,UAAU,GAxBC,CA6BXnD,KAAKqF,QAAQpE,SAAWjB,KAAKI,SAASpB,QACxCgB,KAAKqF,QAAQpE,QAAQhD,SAASuC,IAEvBI,MAAMC,QAAQL,EAAKY,UACtBZ,EAAKY,OAAS,CAACZ,EAAKY,SAIpBZ,EAAK4D,eAAe,WACG,mBAAhB5D,EAAKE,SAEZV,KAAK+K,gBAAkB/K,KAAK+K,gBAAgB/D,OAAOxG,EAAKY,QAExDpB,KAAK8K,gBAAgBhK,KAAK,CACxBG,QAAST,EAAKY,OACdgP,SAAU5P,EAAKE,UAKnBF,EAAKY,OAAOnD,SAAS8E,IACnB,MAAMc,EAAK7D,KAAKI,SAAS2C,GACrBvC,EAAK0D,MACPL,EAAGhG,aAAa,YAAa2C,EAAK0D,MAEhC1D,EAAK2D,QACPN,EAAGhG,aAAa,cAAe2C,EAAK2D,QAElC3D,EAAK4D,eAAe,aACtBP,EAAGhG,aAAa,gBAAiB2C,EAAK2C,UAGpC3C,EAAK4D,eAAe,YACF,IAAhB5D,EAAK6P,QACPrQ,KAAKiB,UAAUwC,KAAK,CAACV,IAIrBvC,EAAK4D,eAAe,SAAkC,IAAvB5D,EAAKY,OAAOpC,QAC7CgB,KAAKiB,UAAUI,KAAKb,EAAKY,OAAO,GAAIZ,EAAKa,MAAM,EAChD,GApBH,IAyBArB,KAAKe,UACPf,KAAKQ,KAAKvC,SAAQ,CAACiC,EAAKjB,KACtBiB,EAAIqB,UAAYtC,EAChB2B,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAS4E,IAC7BA,EAAKrC,KAAOqC,EAAKjF,SAAjB,GADF,IAKEoC,KAAK+K,gBAAgB/L,QACvBgB,KAAKQ,KAAKvC,SAASiC,IACjBU,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAQ,CAAC4E,EAAM5D,KAC/Be,KAAK+K,gBAAgBlJ,SAAS5C,IAChCe,KAAK8K,gBAAgB7M,SAASoH,IACxBA,EAAQpE,QAAQY,SAAS5C,KAC3B4D,EAAKjF,UAAYyH,EAAQ+K,SAAS/S,KAChC2C,KACA6C,EAAKrC,KACLqC,EACA3C,GAEH,GAEJ,GAZH,IAiBJF,KAAKiB,UAAUC,WAGjBlB,KAAKU,OAAO,SACb,CAMD4P,UAGE,GAFAtQ,KAAKvC,IAAIG,UAAYoC,KAAK8J,cAEtB9J,KAAKqF,QAAQuC,WAEf,GADA5H,KAAKqF,QAAQpE,QAAQsP,QAEnBvQ,KAAKqF,QAAQjB,eAAe,YAC5BpE,KAAKqF,QAAQpE,QAAQjC,OAAS,EAE9B,IAAK,IAAIC,EAAI,EAAGA,EAAIe,KAAKqF,QAAQpE,QAAQjC,OAAQC,IAC/Ce,KAAKqF,QAAQpE,QAAQhC,GAAGmC,OAASpB,KAAKqF,QAAQpE,QAAQhC,GAAGmC,OAAS,OAGpEpB,KAAKqF,QAAQpE,QAAU,GAK3BjB,KAAKvC,IAAIoJ,UAAU1F,OAAO,qBAG1BnB,KAAKsM,QAAQY,WAAWC,aAAanN,KAAKvC,IAAKuC,KAAKsM,SAEpDtM,KAAK6J,aAAc,EAEnBmG,OAAOQ,oBAAoB,SAAUxQ,KAAKgK,UAAUC,SACrD,CAMDjJ,SACEhB,KAAKsM,QAAQzF,UAAU1F,OAAO,qBAE9BnB,KAAKyQ,SAASzQ,MACdA,KAAKU,OAAO,QAEZV,KAAK2O,MAAQ,GAEb,IAAI1P,EAAIe,KAAK+N,MAAM/O,OACnB,KAAOC,KAAK,CACV,MAAMwH,EAAMxH,EAAI,EAChBe,KAAK2O,MAAM1P,GAAKd,EAAa,IAANc,EAAU,SAAW,GAAIwH,EAAKA,EACtD,CAEDzG,KAAK2F,SAAU,EAEf3F,KAAKU,OAAO,SAEZV,KAAKD,OAAOiB,SAEZhB,KAAKuO,qBAELvO,KAAKuF,KAAK,mBACX,CAEDgJ,qBACG,GAAIvO,KAAKqF,QAAQuC,WAAY,CAC3B,MAAM8I,EAAUhT,SAASoO,iBAAiB,uBACpC2D,EAAYzP,KAAKsM,QAAQ5C,cAAc,2BAK7C,GAHA+F,EAAUnF,SAAU,EACpBmF,EAAUkB,eAAgB,EAEtBD,EAAQ1R,OAAS,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIyR,EAAQ1R,OAAQC,IAClCyR,EAAQzR,GAAGqL,SAAU,EACrBoG,EAAQzR,GAAG2R,QAAU1S,IACfA,EAAEyR,WACJ3P,KAAK6Q,oBACN,CAIR,CACH,CAEDA,qBACE,MAAMH,EAAU1Q,KAAKsM,QAAQR,iBAAiB,uBACxC8D,EAAU,CACdC,aAAc7P,KAAK8P,iBACnBC,UAAWW,EAAQ1R,QAGfyQ,EAAYzP,KAAKsM,QAAQ5C,cAAc,2BACzCkG,EAAQC,cAAgBD,EAAQG,WAClCN,EAAUnF,SAAU,EACpBmF,EAAUkB,eAAgB,GACjBf,EAAQC,aAAe,GAChCJ,EAAUnF,SAAU,EACpBmF,EAAUkB,eAAgB,IAE1BlB,EAAUnF,SAAU,EACpBmF,EAAUkB,eAAgB,GAG5B3Q,KAAKuF,KAAK,mBAAoBqK,EAC/B,CAMDa,WACE,MAAMlU,EAAUyD,KAAKqF,QAAQ9I,QAC7B,IAAIwD,EAAOC,KAAKwD,WAmBhB,OAjBIxD,KAAKqO,YACPtO,EAAO,GAEPC,KAAKmH,WAAWlJ,SAAS+D,GAAUjC,EAAKe,KAAKd,KAAKwD,WAAWxB,OAG3DhC,KAAKqF,QAAQ6C,OAEflI,KAAK+N,MAAQhO,EACVM,KAAI,CAACF,EAAIlB,IAAOA,EAAI1C,GAAY,EAAIwD,EAAKsM,MAAMpN,EAAGA,EAAI1C,GAAW,OACjEgI,QAAQlG,GAASA,IAEpB2B,KAAK+N,MAAQ,CAAChO,GAGhBC,KAAK4N,WAAa5N,KAAKiO,SAAWjO,KAAK+N,MAAM/O,OAEtCgB,KAAK4N,UACb,CAMDJ,aACE,IACGxN,KAAKqF,QAAQ0D,QAAQ/J,QAAUgB,KAAKqF,QAAQ2D,eAC7ChJ,KAAKuD,gBACLvD,KAAKuD,eAAevE,OACpB,CACA,IAAIkD,EACA4O,GAAK,EAKT,GAJA9Q,KAAK+Q,aAAe,GAIhB/Q,KAAKvC,IAAIqK,OA+BX,GA9BI9H,KAAKqF,QAAQ0D,QAAQ/J,SACvB8R,EAAKxT,EAAc,SACnBwT,EAAGrQ,YAAYnD,EAAc,OAC7BwT,EAAGE,MAAMC,OAAS,MACdjR,KAAKkR,cAEPlR,KAAKvC,IAAIqK,MAAQ9H,KAAKkR,YAAYpJ,QAKtC9H,KAAKuD,eAAetF,SAAS4E,IAC3BA,EAAKmO,MAAMf,MAAQ,EAAnB,IAGFjQ,KAAKuD,eAAetF,SAAQ,CAAC4E,EAAM5D,KACjC,MAAMkS,EAAKtO,EAAKuO,YACVC,EAAKF,EAAKnR,KAAKoN,KAAK6C,MAAS,IAGnC,GAFApN,EAAKmO,MAAMf,MAAS,GAAEoB,KACtBrR,KAAK+Q,aAAa9R,GAAKkS,EACnBnR,KAAKqF,QAAQ0D,QAAQ/J,OAAQ,CAC/B,MAAM6E,EAAKvG,EAAc,MACzBwT,EAAG5B,kBAAkBzO,YAAYoD,GACjCA,EAAGmN,MAAMf,MAAS,GAAEoB,KACpBxN,EAAGmN,MAAMM,WAAa,IACtBzN,EAAGmN,MAAMO,cAAgB,IACzB1N,EAAGmN,MAAMQ,OAAS,GACnB,KAGCxR,KAAKqF,QAAQ0D,QAAQ/J,OAAQ,CAC/B,MAAM+N,EAAY/M,KAAKvC,IAAIgU,cAC3B,IAAKzR,KAAKkR,YAAa,CACrBlR,KAAKkR,YAAc5T,EAAc,QAAS,CACxCiB,MAAO,sBAET,MAAMmT,EAAkBpU,EAAc,MAAO,CAC3CiB,MAAO,gCAETmT,EAAgBjR,YAAYT,KAAKkR,aACjCnE,EAAU0E,cAAc7F,aAAa8F,EAAiB3E,EACvD,CACD,MAAM4E,EAAM3R,KAAKvC,IAAIqK,MACrB9H,KAAKvC,IAAI0P,aAAa2D,EAAIa,GAC1B3R,KAAKkR,YAAYpJ,MAAQ6J,EAGzB3R,KAAKkR,YAAYO,cAAcT,MAAMY,aAAgB,GACnD5R,KAAKkR,YAAYW,YACjB7R,KAAKvC,IAAIoU,YACTvC,SACEtP,KAAKkR,YAAYO,cAAcT,MAAMY,cAAgB,IACrD,QAIA7E,EAAU+E,aAAe/E,EAAUgF,eAErChF,EAAUiE,MAAMgB,UAAY,SAE/B,MACI,CACL9P,EAAQ,GAGR4O,EAAKxT,EAAc,SACnB,MAAM6E,EAAI7E,EAAc,MACxBsD,MAAMoE,KAAKhF,KAAKvC,IAAIsK,QAAQ,GAAGhI,KAAK,GAAGmC,OAAOjE,SAAQ,KACpD,MAAM4F,EAAKvG,EAAc,MACzB6E,EAAE1B,YAAYoD,GACd3B,EAAMpB,KAAK+C,EAAX,IAGFiN,EAAGrQ,YAAY0B,GACfnC,KAAKvC,IAAImO,aAAakF,EAAI9Q,KAAKgM,MAE/B,MAAMiG,EAAS,GACf/P,EAAMjE,SAAQ,CAAC4E,EAAM5D,KACnB,MAAMkS,EAAKtO,EAAKuO,YACVC,EAAKF,EAAKnR,KAAKoN,KAAK6C,MAAS,IACnCgC,EAAOnR,KAAKuQ,GACZrR,KAAK+Q,aAAa9R,GAAKkS,CAAvB,IAGFnR,KAAKQ,KAAKvC,SAASiC,IACjBU,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAQ,CAAC4E,EAAM5D,KAC/Be,KAAKiB,QAAQ4B,EAAKuE,WAAWxD,YAC/Bf,EAAKmO,MAAMf,MAAS,GAAEgC,EAAOhT,MAA7B,GAFJ,IAOFe,KAAKvC,IAAI6G,YAAYwM,EACtB,CACF,CACF,CAMDvD,YACMvN,KAAKqF,QAAQ4D,cACfjJ,KAAK+M,UAAUiE,MAAMC,OAAS,KAC9BjR,KAAKoN,KAAOpN,KAAK+M,UAAUM,wBAC3BrN,KAAK+M,UAAUiE,MAAMC,OAAU,GAAEjR,KAAKoN,KAAK6D,WAtnCxB,CA2nCvBiB,iBAAiBC,GACf,OAAOA,EAAIC,UAAU,OAAO1L,QAAQ,mBAAoB,GACzD,CAOD6I,OAAO8C,GACL,QAAKrS,KAAKe,UAEVsR,EAAQA,EAAM1S,cAEdK,KAAK4K,YAAc,EACnB5K,KAAKqO,WAAY,EACjBrO,KAAKmH,WAAa,GAEbkL,EAAMrT,QAQXgB,KAAKmF,QAELnF,KAAKQ,KAAKvC,SAAQ,CAACiC,EAAKyH,KACtB,MAAM2K,EAAUtS,KAAKmH,WAAWtF,SAAS3B,GAGlBmS,EAAME,MAAM,KAAKC,QAAO,CAACC,EAAMC,KACpD,IAAI7Q,GAAW,EACXgB,EAAO,KACPoC,EAAU,KAEd,IAAK,IAAI1C,EAAI,EAAGA,EAAIrC,EAAIgC,MAAMlD,OAAQuD,IAAK,CACzCM,EAAO3C,EAAIgC,MAAMK,GACjB0C,EAAUpC,EAAKqC,aAAa,gBACxBrC,EAAKG,aAAa,gBAClBH,EAAK6C,YAET,MAAMiN,EAAkB3S,KAAKkS,iBAAiBjN,EAAQtF,eAChDiT,EAAe5S,KAAKkS,iBAAiBQ,GAE3C,GACEC,EAAgB9Q,SAAS+Q,IACzB5S,KAAKiB,QAAQ4B,EAAKuE,WAAWxD,UAC7B,CACA/B,GAAW,EACX,KACD,CACF,CAED,OAAO4Q,GAAQ5Q,CAAf,IACC,KAEoByQ,GACrBpS,EAAImD,YAAcsE,EAClB3H,KAAKmH,WAAWrG,KAAK6G,IAErBzH,EAAImD,YAAc,IACnB,IAGHrD,KAAKsM,QAAQzF,UAAUlG,IAAI,kBAEtBX,KAAKmH,WAAWnI,OAKnBgB,KAAKgB,UAJLhB,KAAKsM,QAAQzF,UAAU1F,OAAO,kBAE9BnB,KAAKoF,WAAWpF,KAAKqF,QAAQC,OAAO7I,iBAKtCuD,KAAKuF,KAAK,mBAAoB8M,EAAOrS,KAAKmH,cAzDxCnH,KAAKqO,WAAY,EACjBrO,KAAKgB,SACLhB,KAAKuF,KAAK,mBAAoB8M,EAAOrS,KAAKmH,YAC1CnH,KAAKsM,QAAQzF,UAAU1F,OAAO,mBACvB,GAsDV,CAOD9C,KAAKA,GAEH,OAAIA,GAAQ2B,KAAK4K,cAIZ9G,MAAMzF,KACT2B,KAAK4K,YAAc0E,SAASjR,EAAM,OAGhCA,EAAO2B,KAAK+N,MAAM/O,QAAUX,EAAO,KAIvC2B,KAAKU,OAAO,QACZV,KAAKU,OAAO,cAEZV,KAAKuF,KAAK,iBAAkBlH,IAC7B,CAQDwU,WAAW9P,EAAQ+P,GAEjB9S,KAAKiB,UAAUI,KAAK0B,EAAQ+P,EAC7B,CAEDpH,aAAatF,GAAM,GACjB,IAAI2M,EAAO,qBACP3M,IACF2M,EAAQ,GAAEA,SAEZ,MAAMC,EAAMtV,SAASJ,cAAc,SAUnC,OATA0V,EAAI9O,KAAO,WACX8O,EAAID,KAAOA,EACP3M,IACF4M,EAAIC,GAAKF,GAEXC,EAAIE,cAAe,EACnBF,EAAInM,UAAUlG,IAAIoS,GAClBC,EAAInM,UAAUlG,OAAOX,KAAKqF,QAAQmC,QAAQgC,UAC1CwJ,EAAIE,cAAe,EACZF,CACR,CAEDvH,WAAWvL,GACT,MAAM8S,EAAMhT,KAAK0L,eAGjB,OAFAxL,EAAIiQ,QAAQ6C,EAAIrG,WAETzM,CACR,CAGDsL,cAAcS,GAEZ,MAAMwD,EAAYzP,KAAK0L,cAAa,GAGpC,OAFAO,EAAKkE,QAAQV,EAAU9C,WAEhBV,CACR,CAMDlI,OAAOvD,GACL,IAAIT,EAAO,GACX,GAAI/C,EAASwD,GAAO,CAClB,GAAIA,EAAKJ,WACFJ,KAAKwF,cAAgBxF,KAAKe,QAAS,CACtC,MAAMZ,EAAK7C,EAAc,MACzBkD,EAAKJ,SAASnC,SAAS+F,IACrB,MAAMH,EAAKvG,EAAc,KAAM,CAC7BkB,KAAMwF,IAGR7D,EAAGM,YAAYoD,EAAf,IAEF7D,KAAKiM,KAAKxL,YAAYN,GAEtBH,KAAKkJ,OAAS/I,EACdH,KAAKI,SAAW,GAAGiM,MAAMhP,KAAK8C,EAAG+B,OACjClC,KAAKwF,aAAc,EAInBxF,KAAKqF,QAAQlC,SAAWnD,KAAK+J,gBAG7B/J,KAAKU,OAAO,UAGZV,KAAKuD,eAAiBvD,KAAKI,SAASiM,OACrC,CAGH,GAAI7L,EAAKA,MAAQI,MAAMC,QAAQL,EAAKA,MAAO,CACzCA,EAAKA,KAAOR,KAAKmT,aAAa3S,EAAKA,MACnC,IAAK,IAAIvB,EAAI,EAAGA,EAAIuB,EAAKA,KAAKxB,OAAQC,IACpCuB,EAAKA,KAAKvB,GAAKe,KAAKyL,WAAWjL,EAAKA,KAAKvB,IAG3Cc,EAAOS,EAAKA,IACb,CApCH,MAqCWI,MAAMC,QAAQL,IACvBA,EAAKvC,SAASiC,IACZ,MAAMiC,EAAI,GACVjF,OAAO0M,QAAQ1J,GAAKjC,SAAQ,EAAE+F,EAASnB,MACrC,MAAMb,EAAQhC,KAAKsF,OAAO3B,QAAQK,GAE9BhC,GAAS,IACXG,EAAEH,GAASa,EACZ,IAEH9C,EAAKe,KAAKqB,EAAV,IAGApC,EAAKf,SACPgB,KAAKD,OAAOY,IAAIZ,GAEhBC,KAAKe,SAAU,GAGjBf,KAAKgB,SACLhB,KAAKsN,aACLtN,KAAKwN,YACN,CAED2F,aAAa3S,GACX,MAAM2S,EAAe,GACrB,IAAK,IAAIlU,EAAI,EAAGA,EAAIuB,EAAKxB,OAAQC,IAAK,CACpC,IAAImU,EAAM,GACV,GAAuB,iBAAZ5S,EAAKvB,IAA+B,OAAZuB,EAAKvB,GAAa,CACnDmU,EAAMlW,OAAOmW,OAAO7S,EAAKvB,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIkU,EAAIpU,OAAQE,IACR,iBAAXkU,EAAIlU,KACbkU,EAAIlU,GAAM,GAAEkU,EAAIlU,KAJtB,MAOO,GAAI0B,MAAMC,QAAQL,EAAKvB,IAAK,CACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIsB,EAAKvB,GAAGD,OAAQE,IACR,iBAAfsB,EAAKvB,GAAGC,KACjBsB,EAAKvB,GAAGC,GAAM,GAAEsB,EAAKvB,GAAGC,MAG5BkU,EAAM5S,EAAKvB,EACZ,CACGmU,EAAIpU,OAAS,GACfmU,EAAarS,KAAKsS,EAErB,CACD,OAAOD,CACR,CAMDG,UACMtT,KAAKqF,QAAQ4C,aACfjI,KAAKsJ,MAAMnK,MAAQ,GACnBa,KAAKqO,WAAY,GAEnBrO,KAAK4K,YAAc,EACnB5K,KAAK6K,aAAc,EACnB7K,KAAKgB,SAELhB,KAAKuF,KAAK,oBACX,CAODJ,MAAM3G,GACAwB,KAAKgM,MACPlO,EAAMkC,KAAKgM,MAGb,IAAIuH,EAASvT,KAAKgM,KAKlB,GAJKhM,KAAKgM,OACRuH,EAASvT,KAAKvC,KAGZe,EAAM,CACR,GAAoB,iBAATA,EAAmB,CACfd,SAASoQ,yBACjBlQ,UAAYY,CAClB,CAED+U,EAAO9S,YAAYjC,EACpB,CACF,CAODgV,OAAOC,GACL,IAAKzT,KAAKwF,cAAgBxF,KAAKe,QAAS,OAAO,EAE/C,MAAM2S,EAAU1T,KAAKuD,eACrB,IAAIxD,EAAO,GACX,MAAM4T,EAAM,GACZ,IAAI1U,EACAsD,EACA4P,EACAhD,EAmBJ,IAAKnS,EAASyW,GACZ,OAAO,EAGT,MAAMpO,EAAU,CApBduO,UAAU,EACVC,WAAY,GAGZC,cAAe,KACfC,gBAAiB,IAGjBC,UAAW,UAGXC,SAAU,KACVC,MAAO,KAUJT,GAGL,GAAIpO,EAAQnB,KAAM,CAOhB,GANqB,QAAjBmB,EAAQnB,MAAmC,QAAjBmB,EAAQnB,OAEpCnE,EAAK,GAAKC,KAAKkJ,QAIb7D,EAAQ8O,UAEV,GAAKrQ,MAAMuB,EAAQ8O,YAEZ,GAAIvT,MAAMC,QAAQwE,EAAQ8O,WAE/B,IAAKlV,EAAI,EAAGA,EAAIoG,EAAQ8O,UAAUnV,OAAQC,IACxCc,EAAOA,EAAKiH,OAAOhH,KAAK+N,MAAM1I,EAAQ8O,UAAUlV,GAAK,SAJvDc,EAAOA,EAAKiH,OAAOhH,KAAK+N,MAAM1I,EAAQ8O,UAAY,SAQpDpU,EAAOA,EAAKiH,OAAOhH,KAAKwD,YAI1B,GAAIzD,EAAKf,OAAQ,CACf,GAAqB,QAAjBqG,EAAQnB,MAAmC,QAAjBmB,EAAQnB,KAAgB,CAGpD,IAFAiO,EAAM,GAEDlT,EAAI,EAAGA,EAAIc,EAAKf,OAAQC,IAAK,CAChC,IAAKsD,EAAI,EAAGA,EAAIxC,EAAKd,GAAGiD,MAAMlD,OAAQuD,IAEpC,IACG8C,EAAQwO,WAAWhS,SAAS6R,EAAQnR,GAAGW,oBACxClD,KAAKiB,QAAQyS,EAAQnR,GAAGW,mBAAmBU,UAC3C,CACA,IAAItF,EAAOyB,EAAKd,GAAGiD,MAAMK,GAAGmD,YAC5BpH,EAAOA,EAAK8V,OACZ9V,EAAOA,EAAKoI,QAAQ,UAAW,KAC/BpI,EAAOA,EAAKoI,QAAQ,MAAO,MAC3BpI,EAAOA,EAAKoI,QAAQ,KAAM,MAE1BpI,EAAOA,EAAKoI,QAAQ,KAAM,OACtBpI,EAAKuD,SAAS,OAAMvD,EAAQ,IAAGA,MAEnC6T,GAAO7T,EAAO+G,EAAQ0O,eACvB,CAGH5B,EAAMA,EAAIiC,OAAO1U,UAAU,EAAGyS,EAAInT,OAAS,GAG3CmT,GAAO9M,EAAQyO,aA1BmC,CA8BpD3B,EAAMA,EAAIiC,OAAO1U,UAAU,EAAGyS,EAAInT,OAAS,GAEvCqG,EAAQuO,WACVzB,EAAO,+BAA8BA,IAExC,MAAM,GAAqB,QAAjB9M,EAAQnB,KAAgB,CAKjC,IAHAiO,EAAO,iBAAgB9M,EAAQ2O,gBAG1B/U,EAAI,EAAGA,EAAIyU,EAAQ1U,OAAQC,KAG3BoG,EAAQwO,WAAWhS,SAAS6R,EAAQzU,GAAGiE,oBACxClD,KAAKiB,QAAQyS,EAAQzU,GAAGiE,mBAAmBU,YAE3CuO,GAAQ,KAAIuB,EAAQzU,GAAGyG,kBAW3B,IANAyM,EAAMA,EAAIiC,OAAO1U,UAAU,EAAGyS,EAAInT,OAAS,GAG3CmT,GAAO,YAGFlT,EAAI,EAAGA,EAAIc,EAAKf,OAAQC,IAAK,CAGhC,IAFAkT,GAAO,IAEF5P,EAAI,EAAGA,EAAIxC,EAAKd,GAAGiD,MAAMlD,OAAQuD,KAGjC8C,EAAQwO,WAAWhS,SAAS6R,EAAQnR,GAAGW,oBACxClD,KAAKiB,QAAQyS,EAAQnR,GAAGW,mBAAmBU,YAE3CuO,GAAQ,IAAGpS,EAAKd,GAAGiD,MAAMK,GAAGmD,iBAKhCyM,EAAMA,EAAIiC,OAAO1U,UAAU,EAAGyS,EAAInT,OAAS,GAG3CmT,GAAO,IAvCwB,CA2CjCA,EAAMA,EAAIiC,OAAO1U,UAAU,EAAGyS,EAAInT,OAAS,GAG3CmT,GAAO,IAEH9M,EAAQuO,WACVzB,EAAO,sCAAqCA,IAE/C,MAAM,GAAqB,SAAjB9M,EAAQnB,KAAiB,CAElC,IAAK3B,EAAI,EAAGA,EAAIxC,EAAKf,OAAQuD,IAG3B,IAFAoR,EAAIpR,GAAKoR,EAAIpR,IAAM,CAAA,EAEdtD,EAAI,EAAGA,EAAIyU,EAAQ1U,OAAQC,KAG3BoG,EAAQwO,WAAWhS,SAAS6R,EAAQzU,GAAGiE,oBACxClD,KAAKiB,QAAQyS,EAAQzU,GAAGiE,mBAAmBU,YAE3C+P,EAAIpR,GAAGmR,EAAQzU,GAAGyG,aAAe3F,EAAKwC,GAAGL,MAAMjD,GAAGyG,aAMxDyM,EAAMkC,KAAKC,UAAUX,EAAKtO,EAAQ4O,SAAU5O,EAAQ6O,OAEhD7O,EAAQuO,WACVzB,EAAO,uCAAsCA,IA3GlC,CAsIf,OAtBI9M,EAAQuO,WAEVvO,EAAQkP,SAAWlP,EAAQkP,UAAY,mBACvClP,EAAQkP,UAAa,IAAGlP,EAAQnB,OAEhCiO,EAAMqC,UAAUrC,GAGhBhD,EAAOzR,SAASJ,cAAc,KAC9B6R,EAAKC,KAAO+C,EACZhD,EAAKyE,SAAWvO,EAAQkP,SAGxB7W,SAASsO,KAAKvL,YAAY0O,GAG1BA,EAAKsF,QAGL/W,SAASsO,KAAK1H,YAAY6K,IAGrBgD,CACR,CACF,CAED,OAAO,CACR,CAODpM,OAAO0N,GACL,IAAIiB,GAAM,EAQV,IAAK1X,EAASyW,GACZ,OAAO,EAGT,MAAMpO,EAAU,CATdyO,cAAe,KACfC,gBAAiB,OAUdN,GAGL,GAAIpO,EAAQ7E,KAAKxB,QAAUhC,EAASqI,EAAQ7E,MAAO,CAEjD,GAAqB,QAAjB6E,EAAQnB,KAAgB,CAC1BwQ,EAAM,CACJlU,KAAM,IAIR,MAAMT,EAAOsF,EAAQ7E,KAAK+R,MAAMlN,EAAQyO,eAEpC/T,EAAKf,SACHqG,EAAQjF,WACVsU,EAAItU,SAAWL,EAAK,GAAGwS,MAAMlN,EAAQ0O,iBAErChU,EAAKwQ,SAGPxQ,EAAK9B,SAAQ,CAACiC,EAAKjB,KACjByV,EAAIlU,KAAKvB,GAAK,GAGd,MAAMoU,EAASnT,EAAIqS,MAAMlN,EAAQ0O,iBAE7BV,EAAOrU,QACTqU,EAAOpV,SAASkB,IACduV,EAAIlU,KAAKvB,GAAG6B,KAAK3B,EAAjB,GAEH,IAGN,MAAM,GAAqB,SAAjBkG,EAAQnB,KAAiB,CAClC,MAAMyQ,EL1pDQxC,KAClB,IAAI/F,GAAI,EACR,IACIA,EAAIiI,KAAKO,MAAMzC,EAGlB,CAFC,MAAOjU,GACL,OAAO,CACV,CACD,QAAS,OAASkO,IAAOxL,MAAMC,QAAQuL,KAAOpP,EAASoP,KAAQA,CAA/D,EKmpDiByI,CAAOxP,EAAQ7E,MAGxBmU,IACFD,EAAM,CACJtU,SAAU,GACVI,KAAM,IAGRmU,EAAK1W,SAAQ,CAACuC,EAAMvB,KAClByV,EAAIlU,KAAKvB,GAAK,GACd/B,OAAO0M,QAAQpJ,GAAMvC,SAAQ,EAAE8E,EAAQ5D,MAChCuV,EAAItU,SAASyB,SAASkB,IACzB2R,EAAItU,SAASU,KAAKiC,GAGpB2R,EAAIlU,KAAKvB,GAAG6B,KAAK3B,EAAjB,GALF,IAWL,CAEGnC,EAASqI,EAAQ7E,QACnBkU,EAAMrP,EAAQ7E,MAGZkU,GAEF1U,KAAK+D,OAAO2Q,EAEf,CAED,OAAO,CACR,CAMDI,QACE,MAAM1U,EAAWJ,KAAKuD,eAChBxD,EAAOC,KAAKwD,WACZiE,EAAQnK,EAAc,SACtBgK,EAAQhK,EAAc,SACtBiK,EAAQjK,EAAc,SAEtB6C,EAAK7C,EAAc,MACzB8C,EAASnC,SAAS4F,IAChB1D,EAAGM,YACDnD,EAAc,KAAM,CAClBkB,KAAMqF,EAAG6B,cAFb,IAOF4B,EAAM7G,YAAYN,GAElBJ,EAAK9B,SAASiC,IACZ,MAAMC,EAAK7C,EAAc,MACzBsD,MAAMoE,KAAK9E,EAAIgC,OAAOjE,SAAS4E,IAC7B1C,EAAGM,YACDnD,EAAc,KAAM,CAClBkB,KAAMqE,EAAK6C,cAFf,IAMF6B,EAAM9G,YAAYN,EAAlB,IAGFsH,EAAMhH,YAAY6G,GAClBG,EAAMhH,YAAY8G,GAGlB,MAAM8J,EAAIrB,OAAO+E,OAGjB1D,EAAE3T,SAASsO,KAAKvL,YAAYgH,GAG5B4J,EAAEyD,OACH,CAMD1P,WAAW4P,GACT,IAAIC,EAAU,EAEVjV,KAAKe,QACPkU,EAAUjV,KAAKQ,KAAK,GAAG0B,MAAMlD,OACpBgB,KAAKuD,eAAevE,SAC7BiW,EAAUjV,KAAKuD,eAAevE,QAGhCgB,KAAKsM,QAAQzF,UAAUlG,IAAI,qBAEvBX,KAAKiN,QACPjN,KAAKiN,MAAMrP,UAAY,IAEzBoC,KAAK4N,WAAa,EAClB5N,KAAKU,OAAO,SAEZV,KAAKmF,MACH7H,EAAc,KAAM,CAClBkB,KAAO,2CAA0CyW,MAAYD,WAGlE,CAMD/T,QAAQA,GACN,OAAO,IAAIoB,EAAQrC,KAAMiB,EAC1B,CAMDlB,KAAKA,GACH,OAAO,IAAIH,EAAKI,KAAMD,EACvB,CAQDmV,GAAGhL,EAAOiL,GACRnV,KAAKoV,OAASpV,KAAKoV,QAAU,CAAA,EAC7BpV,KAAKoV,OAAOlL,GAASlK,KAAKoV,OAAOlL,IAAU,GAC3ClK,KAAKoV,OAAOlL,GAAOpJ,KAAKqU,EACzB,CAQDE,IAAInL,EAAOiL,GACTnV,KAAKoV,OAASpV,KAAKoV,QAAU,CAAA,EACzBlL,KAASlK,KAAKoV,SAAW,GAC7BpV,KAAKoV,OAAOlL,GAAO5I,OAAOtB,KAAKoV,OAAOlL,GAAOvG,QAAQwR,GAAW,EACjE,CAOD5P,KAAK2E,GAEH,GADAlK,KAAKoV,OAASpV,KAAKoV,QAAU,CAAA,EACzBlL,KAASlK,KAAKoV,SAAW,EAC7B,IAAK,IAAInW,EAAI,EAAGA,EAAIe,KAAKoV,OAAOlL,GAAOlL,OAAQC,IAC7Ce,KAAKoV,OAAOlL,GAAOjL,GAAGqW,MACpBtV,KACAY,MAAMzD,UAAUkP,MAAMhP,KAAKkY,UAAW,GAG3C"}